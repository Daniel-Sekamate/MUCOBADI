@page "/LayeringReportPage"
@using MUCOBADI.Models;
@using MUCOBADI.Data;
@using System.Collections.ObjectModel;
@using System.IO;
@using Microsoft.EntityFrameworkCore;
@using System.Collections;
@inject UserManagement userManagement;
@inject NavigationManager Navigation;
@using Microsoft.AspNetCore.Hosting;
@inject IWebHostEnvironment hostingEnv;
@using Syncfusion.XlsIO;
@using Syncfusion.XlsIO.Implementation;
@using Syncfusion.XlsIORenderer;
@inject Microsoft.JSInterop.IJSRuntime JS
@inject MUCOBADIContext db;
@inject SPToCoreContext spdb;
<style>
    h4 {
        background-color: black;
        color: whitesmoke;
        padding: 10px;
    }
</style>
<ol class="breadcrumb" style="margin-top:5px;">
    <li class="breadcrumb-item active" style="color: brown;"> <strong>USAID/ICARE Service Layering Report </strong></li>
</ol>
<div class="row">
    <div class="col-lg-12 control-section">
        <SfToast @ref="ToastObj" ID="toast_type">
            <ToastPosition X="@ToastPosition"></ToastPosition>
        </SfToast>
    </div>
</div>
<div class="form-row">
    <div class="form-group col-md-12">
        <EditForm Model="@InputModel" OnValidSubmit="@SearchRecords">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <p>District</p>
                    <SfMultiSelect @bind-Value="@InputModel.DistrictId" Enabled="@isEnabled" TValue="int?[]" TItem="ADistrict" AllowFiltering="true" Placeholder="Please select" Mode="@VisualMode.CheckBox" DataSource="@_DistrictData" ShowSelectAll="true" EnableSelectionOrder="true" ShowDropDownIcon="true" FilterBarPlaceholder="Search District" FloatLabelType="FloatLabelType.Never" PopupHeight="350px">
                        <MultiSelectFieldSettings Value="@nameof(ADistrict.DistrictId)" Text="@nameof(ADistrict.DistrictDescription)"></MultiSelectFieldSettings>
                        <MultiSelectEvents TValue="int?[]" TItem="ADistrict" ValueChange="OnDistrictChange"></MultiSelectEvents>
                    </SfMultiSelect>
                </div>
                <div class="form-group col-md-3">
                    <p>Sub-County</p>
                    <SfMultiSelect @bind-Value="@InputModel.SubcountyId" TValue="int?[]" TItem="ASubcounty" AllowFiltering="true" Placeholder="Please select" Mode="@VisualMode.CheckBox" DataSource="@_SubcountyData" ShowSelectAll="true" EnableSelectionOrder="true" ShowDropDownIcon="true" FilterBarPlaceholder="Search Sub-county" FloatLabelType="FloatLabelType.Never" PopupHeight="350px">
                        <MultiSelectFieldSettings Value="@nameof(ASubcounty.SubcountyId)" Text="@nameof(ASubcounty.SubcountyDescription)"></MultiSelectFieldSettings>
                        <MultiSelectEvents TValue="int?[]" TItem="ASubcounty" ValueChange="OnSubcountyChange"></MultiSelectEvents>
                    </SfMultiSelect>
                </div>
                <div class="form-group col-md-3">
                    <p>Parish</p>
                    <SfMultiSelect @bind-Value="@InputModel.ParishId" TValue="int?[]" TItem="AParish" AllowFiltering="true" Placeholder="Please select" Mode="@VisualMode.CheckBox" DataSource="@_ParishData" ShowSelectAll="true" EnableSelectionOrder="true" ShowDropDownIcon="true" FilterBarPlaceholder="Search Parish" FloatLabelType="FloatLabelType.Never" PopupHeight="350px">
                        <MultiSelectFieldSettings Value="@nameof(AParish.ParishId)" Text="@nameof(AParish.ParishDescription)"></MultiSelectFieldSettings>
                        <MultiSelectEvents TValue="int?[]" TItem="AParish" ValueChange="OnParishChange"></MultiSelectEvents>
                    </SfMultiSelect>
                </div>
                <div class="form-group col-md-3">
                    <p>Village</p>
                    <SfMultiSelect @bind-Value="@InputModel.VillageId" TValue="int?[]" TItem="AVillage" AllowFiltering="true" Placeholder="Please select" Mode="@VisualMode.CheckBox" DataSource="@_VillageData" ShowSelectAll="true" EnableSelectionOrder="true" ShowDropDownIcon="true" FilterBarPlaceholder="Search Village" FloatLabelType="FloatLabelType.Never" PopupHeight="350px">
                        <MultiSelectFieldSettings Value="@nameof(AVillage.VillageId)" Text="@nameof(AVillage.VillageDescription)"></MultiSelectFieldSettings>
                    </SfMultiSelect>
                </div>
                <div class="form-group col-md-3">
                    <p>Reporting Period Start date</p>
                    <SfDatePicker @bind-Value="@InputModel.Startdate" TValue="DateTime?" Format="dd/MM/yyyy" Placeholder="Please select date" FloatLabelType="FloatLabelType.Never"></SfDatePicker>
                </div>
                 <div class="form-group col-md-3">
                    <p>Reporting Period End date</p>
                    <SfDatePicker @bind-Value="@InputModel.Enddate" TValue="DateTime?" Format="dd/MM/yyyy" Placeholder="Please select date" FloatLabelType="FloatLabelType.Never"></SfDatePicker>
                </div>
               @* <div class="form-group col-md-3">
                    <p>Reporting Period</p>
                    <SfDropDownList @bind-Value="@(InputModel.QuarterId)" Enabled="true" TItem="AQuarter" TValue="int?" DataSource="@QuarterData" Placeholder="Please select" FloatLabelType="FloatLabelType.Never" AllowFiltering="true">
                        <DropDownListFieldSettings Value="@nameof(AQuarter.QuarterId)" Text="@nameof(AQuarter.QuarterName)"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div class="form-group col-md-3">
                    <p>Financial Year</p>
                    <SfDropDownList @bind-Value="@(InputModel.YearId)" Enabled="true" TItem="FianacialYear" TValue="int?" DataSource="@FianacialYearData" Placeholder="Please select" FloatLabelType="FloatLabelType.Never" AllowFiltering="true">
                        <DropDownListFieldSettings Value="@nameof(FianacialYear.FinancialYear)" Text="@nameof(FianacialYear.FinancialYearDesc)"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>*@
                <div class="form-group col-md-3">
                    <BSButton Color="BlazorStrap.Color.Primary" ButtonType="BlazorStrap.ButtonType.Submit">Download Report</BSButton>
                    <BSButton Color="BlazorStrap.Color.Secondary" ButtonType="BlazorStrap.ButtonType.Button" @onclick="ClearSearchBtnClick">Clear Search</BSButton>
                </div>
                <div class="form-group col-md-12">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                </div>
                @if (!string.IsNullOrEmpty(outComeResult))
                {
            <div class="form-group col-md-12">
                @if (outComeResult.Contains("No Record"))
                {
                    <p class="alert alert-danger" style="padding:10px;">@outComeResult</p>
                }
                else if (outComeResult.Contains("Warning"))
                {
                    <p class="alert alert-warning" style="padding:10px;">@outComeResult</p>
                }
                else
                {
                    <p class="alert alert-success" style="padding:10px;">@outComeResult</p>
                }
            </div>
                }
                <div class="form-group col-md-12">
                    <SfSpinner @ref="ReportSpinner" Label="downloading the report please wait..." Size="70" Visible="false"></SfSpinner>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    #region Toasters
    public static string ToastContent { get; set; }
    SfToast ToastObj;
    SfToast DeleteToastObj;
    private string ToastPosition = "Right";
    private int AlarmTimeout { get; set; } = 120000;
    private List<ToastModel> Toast = new List<ToastModel>
{
        new ToastModel{ Title = "Warning!", Content=ToastContent, CssClass="e-toast-warning", Icon="e-warning toast-icons" },
        new ToastModel{ Title = "Success!", Content=ToastContent, CssClass="e-toast-success", Icon="e-success toast-icons" },
        new ToastModel{ Title = "Error!", Content=ToastContent, CssClass="e-toast-danger", Icon="e-error toast-icons" },
        new ToastModel{ Title = "Information!", Content=ToastContent, CssClass="e-toast-info", Icon="e-info toast-icons" }
    };
    #endregion Toasters
    private SearchPanel InputModel = new();
    SfSpinner ReportSpinner;

    List<AVillage> _VillageData { get; set; }
    List<AParish> _ParishData { get; set; }
    List<ASubcounty> _SubcountyData { get; set; }
    List<ADistrict> _DistrictData { get; set; }
    List<AQuarter> QuarterData { get; set; }
    List<FianacialYear> FianacialYearData { get; set; }
    bool isEnabled { get; set; } = false;
    string outComeResult { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();
            if (!userManagement.IsSignedIn())
            {
                Navigation.NavigateTo("/", true);
            }
            else
            {
                FianacialYearData = new List<FianacialYear>();
                _DistrictData = await db.ADistrict.AsNoTracking().ToListAsync();
                //QuarterData = db.AQuarter.AsNoTracking().ToList();
                //int current_year = DateTime.Now.Year;
                //var firstHomeVisitdata = db.BeneficiaryIdentificationRegister.Where(o=> o.DateofIdentification.HasValue==true).OrderBy(o => o.DateofIdentification).AsNoTracking().ToList().FirstOrDefault();
                //if (firstHomeVisitdata != null)
                //{
                //    int firstyear = firstHomeVisitdata.DateofIdentification.Value.Year;
                //    for (int i = 0; i <= (current_year - firstyear); i++)
                //    {

                //        if ((current_year - (firstyear + i)) > 0)
                //        {
                //            FianacialYearData.Add(new FianacialYear { FinancialYear = (firstyear + i), FinancialYearDesc = (firstyear + i).ToString() });
                //        }
                //    }
                //}
                //FianacialYearData.Add(new FianacialYear { FinancialYear = current_year, FinancialYearDesc = current_year.ToString() });
                InputModel = new();
                var user = await db.ViewUserManagement.FirstOrDefaultAsync(o => o.UserName == userManagement.GetUserName());
                if (!user.RoleName.Contains("Super Administrator") && !user.RoleName.Contains("Administrator") && !user.RoleName.Contains("mel director") && !user.RoleName.Contains("mel manager") && !user.RoleName.Contains("cluster manager"))
                {
                    var districtlist = userManagement.GetUserDistrict();
                    if (districtlist != null && districtlist.Count > 0)
                    {
                        List<int?> m = new List<int?>();
                        foreach (var n in districtlist)
                        {
                            m.Add(n);
                        }

                        InputModel.DistrictId = m.ToArray();
                        _SubcountyData = (await db.ASubcounty.AsNoTracking().ToListAsync()).Where(o => districtlist.Any(a => a == o.DistrictId)).ToList();
                    }
                    var subcountyList = userManagement.GetUserSubcounty();
                    if (subcountyList != null && subcountyList.Count > 0)
                    {
                        List<int?> m = new List<int?>();
                        foreach (var n in subcountyList)
                        {
                            m.Add(n);
                        }
                        InputModel.SubcountyId = m.ToArray();
                        _ParishData = (await db.AParish.AsNoTracking().ToListAsync()).Where(o => subcountyList.Any(a => a == o.SubcountyId)).ToList();
                    }
                }
                else
                {
                    isEnabled = true;
                }
            }

        }
        catch (Exception ex)
        {
            await ToastObj.ShowAsync(new ToastModel { Title = "Error!", Content = ex.Message.ToString(), CssClass = "e-toast-danger", Icon = "e-error toast-icons" });
        }
    }

    //private async Task SearchRecords()
    //{
    //    try
    //    {
    //        await ReportSpinner.ShowAsync();
    //        outComeResult = null;
    //        string district = null;
    //        string Subcounty = null;
    //        string parish = null;
    //        string village = null;
    //        if (InputModel.DistrictId != null)
    //        {
    //            district = string.Join(",", InputModel.DistrictId);
    //        }
    //        if (InputModel.SubcountyId != null)
    //        {
    //            Subcounty = string.Join(",", InputModel.SubcountyId);
    //        }
    //        if (InputModel.ParishId != null)
    //        {
    //            parish = string.Join(",", InputModel.ParishId);
    //        }
    //        if (InputModel.VillageId != null)
    //        {
    //            village = string.Join(",", InputModel.VillageId);
    //        }
    //        if (InputModel.QuarterId == null || InputModel.YearId == null)
    //        {
    //            outComeResult = "Please select the reporting period and the financial year";
    //        }
    //        else
    //        {
    //            DateTime? startdate = null;
    //            DateTime? enddate = null;
    //            var quarter = QuarterData.FirstOrDefault(o => o.QuarterId == InputModel.QuarterId);
    //            if (quarter != null)
    //            {
    //                startdate = new DateTime(InputModel.YearId.Value, quarter.StartMonthId.Value, 1);
    //                if (quarter.EndMonthId < quarter.StartMonthId)
    //                {
    //                    enddate = new DateTime((InputModel.YearId.Value + 1), quarter.EndMonthId.Value, DateTime.DaysInMonth((InputModel.YearId.Value + 1), quarter.EndMonthId.Value));
    //                }
    //                else
    //                {
    //                    enddate = new DateTime(InputModel.YearId.Value, quarter.EndMonthId.Value, DateTime.DaysInMonth(InputModel.YearId.Value, quarter.EndMonthId.Value));
    //                }
    //            }

    //            using (var db = new SPToCoreContext())
    //            {
    //                var HivStatus = db.AHivstatus.ToList();
    //                var programParticipation = db.AProgramParticipationStatus.ToList();
    //                List<spSLRHvatAllResult> Hvatdata =new();
    //                List<spSLR_HomeVisitResult> HomeVisit = new();
    //                List<spSLR_ServiceRecivedResult> ServicesProvided = new();
    //                List<spSLR_Referral_FormResult> ReferalForm = new();
    //                List<spSLR_AttendingSchoolResult> schoolAttendence = new();
    //                List<spSLR_HIV_TB_TrackingFormResult> TrackingForm = new();
    //                List<spSLR_TrackingFormExposedInfantsResult> TrackingFormExposedInfants = new();
    //                var identificationRegister = await db.spBeneficiaryIdentificationRegisterGetAllAsync(district, Subcounty, parish, village, null, null, null);

    //                Hvatdata = await db.spSLRHvatAllAsync(district, Subcounty, parish, village, null, startdate, enddate);
    //                HomeVisit = await db.spSLR_HomeVisitAsync(startdate, enddate);
    //                var PreviousHomeVisit = await db.spSLR_HomeVisitAsync((startdate.Value.AddMonths(-3)), (startdate.Value.AddDays(-1)));
    //                ServicesProvided = await db.spSLR_ServiceRecivedAsync(startdate, enddate);
    //                ReferalForm = await db.spSLR_Referral_FormAsync(startdate, enddate);
    //                schoolAttendence = await db.spSLR_AttendingSchoolAsync(startdate, enddate);
    //                var PreviousschoolAttendence = await db.spSLR_AttendingSchoolAsync((startdate.Value.AddMonths(-3)), (startdate.Value.AddDays(-1)));
    //                TrackingForm = await db.spSLR_HIV_TB_TrackingFormAsync(startdate, enddate);
    //                TrackingFormExposedInfants = await db.spSLR_TrackingFormExposedInfantsAsync(startdate, enddate);
    //                var Assessment = await db.spSLR_RisKAssessmentToolAsync(null);
    //                var trackingtool = db.ViewVslaTrackingToolDirectMember.ToList();
    //                var Vslagroupmembers = await db.spSLR_VSLA_Group_MemberAsync(null);
    //                var GraduationCheclist = await db.spSLR_GraduationChecklistAsync(startdate, enddate);

    //                if (Hvatdata != null && Hvatdata.Count > 0)
    //                {
    //                    string household = string.Join(",", identificationRegister.Select(o => o.HouseHoldId).Distinct().ToArray());
    //                    var Members = await db.spSLR_HouseHoldMembersAsync(household);
    //                    //var Members = await db.spSLR_HouseHoldMembersAsync(null);
    //                    using (ExcelEngine excelEngine = new ExcelEngine())
    //                    {
    //                        IApplication application = excelEngine.Excel;
    //                        application.DefaultVersion = ExcelVersion.Excel2013;
    //                        IWorkbook workbook = application.Workbooks.Create(1);
    //                        IWorksheet worksheet = workbook.Worksheets[0];
    //                        worksheet.Name = "Service Layering Report";

    //                        #region Styles
    //                        var headerStyle = workbook.Styles.Add("headerStyle");

    //                        headerStyle.BeginUpdate();
    //                        headerStyle.Color = Syncfusion.Drawing.Color.Black; //Syncfusion.Drawing.Color.FromArgb(255, 0, 0);
    //                        headerStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        headerStyle.Font.Bold = true;
    //                        headerStyle.Font.FontName = "Arial";
    //                        headerStyle.Font.Size = 8f;
    //                        headerStyle.Font.Color = ExcelKnownColors.White;

    //                        headerStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        headerStyle.Borders.Color = ExcelKnownColors.White;
    //                        headerStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        headerStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        headerStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        //headerStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thick;

    //                        headerStyle.WrapText = true;

    //                        headerStyle.EndUpdate();

    //                        var Style = workbook.Styles.Add("bodyStyle");

    //                        Style.BeginUpdate();
    //                        Style.HorizontalAlignment = ExcelHAlign.HAlignLeft;
    //                        Style.VerticalAlignment = ExcelVAlign.VAlignTop;
    //                        Style.Font.Bold = false;
    //                        Style.Font.FontName = "Arial";
    //                        Style.Font.Size = 8f;
    //                        Style.Font.Color = ExcelKnownColors.Black;
    //                        Style.WrapText = true;
    //                        Style.Borders.Color = ExcelKnownColors.Black;
    //                        Style.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        Style.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        Style.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        Style.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        Style.EndUpdate();


    //                        var CategoryStyle = workbook.Styles.Add("CategoryStyle");

    //                        CategoryStyle.BeginUpdate();
    //                        CategoryStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        CategoryStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 195, 0);
    //                        /*CategoryStyle.Color = Syncfusion.Drawing.Color.FromArgb(105, 59, 88);*/ //AUBERGINE
    //                        CategoryStyle.Font.Bold = true;
    //                        CategoryStyle.Font.FontName = "Arial";
    //                        CategoryStyle.Font.Size = 10f;
    //                        CategoryStyle.Font.Color = ExcelKnownColors.White;
    //                        CategoryStyle.WrapText = true;
    //                        CategoryStyle.Borders.Color = ExcelKnownColors.White;
    //                        CategoryStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryStyle.EndUpdate();

    //                        var CategoryTotalStyle = workbook.Styles.Add("CategoryTotalStyle");

    //                        CategoryTotalStyle.BeginUpdate();
    //                        CategoryTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        CategoryTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        CategoryTotalStyle.Color = Syncfusion.Drawing.Color.Black;
    //                        CategoryTotalStyle.Font.Bold = true;
    //                        CategoryTotalStyle.Font.FontName = "Arial";
    //                        CategoryTotalStyle.Font.Size = 8f;
    //                        CategoryTotalStyle.Font.Color = ExcelKnownColors.White;
    //                        CategoryTotalStyle.WrapText = true;
    //                        CategoryTotalStyle.Borders.Color = ExcelKnownColors.White;
    //                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        CategoryTotalStyle.EndUpdate();

    //                        var DivisionStyle = workbook.Styles.Add("DivisionStyle");

    //                        DivisionStyle.BeginUpdate();
    //                        DivisionStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        DivisionStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 0, 0); //RED
    //                        DivisionStyle.Font.Bold = true;
    //                        DivisionStyle.Font.FontName = "Arial";
    //                        DivisionStyle.Font.Size = 8f;
    //                        DivisionStyle.Font.Color = ExcelKnownColors.White;
    //                        DivisionStyle.WrapText = true;
    //                        DivisionStyle.Borders.Color = ExcelKnownColors.White;
    //                        DivisionStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionStyle.EndUpdate();

    //                        var DivisionTotalStyle = workbook.Styles.Add("DivisionTotalStyle");

    //                        DivisionTotalStyle.BeginUpdate();
    //                        DivisionTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        DivisionTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        DivisionTotalStyle.Color = Syncfusion.Drawing.Color.Black;
    //                        DivisionTotalStyle.Font.Bold = true;
    //                        DivisionTotalStyle.Font.FontName = "Arial";
    //                        DivisionTotalStyle.Font.Size = 8f;
    //                        DivisionTotalStyle.Font.Color = ExcelKnownColors.White;
    //                        DivisionTotalStyle.WrapText = true;
    //                        DivisionTotalStyle.Borders.Color = ExcelKnownColors.White;
    //                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        DivisionTotalStyle.EndUpdate();


    //                        var TopicStyle = workbook.Styles.Add("TopicStyle");

    //                        TopicStyle.BeginUpdate();
    //                        TopicStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        TopicStyle.Color = Syncfusion.Drawing.Color.FromArgb(105, 59, 88); //AUBERGINE
    //                        TopicStyle.Font.Bold = true;
    //                        TopicStyle.Font.FontName = "Arial";
    //                        TopicStyle.Font.Size = 8f;
    //                        TopicStyle.Font.Color = ExcelKnownColors.White;
    //                        TopicStyle.WrapText = true;
    //                        TopicStyle.Borders.Color = ExcelKnownColors.White;
    //                        TopicStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        TopicStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        TopicStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        TopicStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        TopicStyle.EndUpdate();

    //                        var TopicTotalStyle = workbook.Styles.Add("TopicTotalStyle");

    //                        TopicTotalStyle.BeginUpdate();
    //                        TopicTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        TopicTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        TopicTotalStyle.Color = Syncfusion.Drawing.Color.Black;
    //                        TopicTotalStyle.Font.Bold = true;
    //                        TopicTotalStyle.Font.FontName = "Arial";
    //                        TopicTotalStyle.Font.Size = 8f;
    //                        TopicTotalStyle.Font.Color = ExcelKnownColors.White;
    //                        TopicTotalStyle.WrapText = true;
    //                        TopicTotalStyle.Borders.Color = ExcelKnownColors.White;
    //                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
    //                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
    //                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
    //                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
    //                        TopicTotalStyle.EndUpdate();
    //                        #endregion

    //                        int row = 1;
    //                        worksheet.Range["A" + row].Text = "Service Layering Report";
    //                        worksheet.Range["A" + row + ":M" + row].CellStyle = CategoryStyle;
    //                        worksheet.Range["A" + row + ":M" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["A" + row + ":M" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["A" + row].RowHeight = 30;
    //                        worksheet.Range["A" + row + ":M" + row].Merge();
    //                        row++;
    //                        row++;
    //                        #region Services
    //                        worksheet.Range["BL" + row].Text = "STABLE";
    //                        worksheet.Range["BL" + row + ":BZ" + row].Merge();
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(155, 194, 230);
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

    //                        worksheet.Range["CA" + row].Text = "SCHOOL";
    //                        worksheet.Range["CA" + row + ":CJ" + row].Merge();
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 230, 153);
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

    //                        worksheet.Range["CK" + row].Text = "PSS";
    //                        worksheet.Range["CK" + row + ":CR" + row].Merge();
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(122, 48, 160);
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Color = ExcelKnownColors.White;

    //                        worksheet.Range["CS" + row].Text = "Protection";
    //                        worksheet.Range["CS" + row + ":DB" + row].Merge();
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 255, 0);
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

    //                        worksheet.Range["DC" + row].Text = "Food security and Nutrition";
    //                        worksheet.Range["DC" + row + ":DN" + row].Merge();
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(217, 217, 217);
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

    //                        worksheet.Range["DO" + row].Text = "HEALTH";
    //                        worksheet.Range["DO" + row + ":EV" + row].Merge();
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 192, 0);
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Size = 12f;
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Bold = true;
    //                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        #endregion end Services

    //                        row++;

    //                        #region Header row
    //                        worksheet.Range["A" + row].Text = "HH UiD";
    //                        worksheet.Range["A" + row].ColumnWidth = 20;

    //                        worksheet.Range["B" + row].Text = "Individual UiD";
    //                        worksheet.Range["B" + row].ColumnWidth = 20;

    //                        worksheet.Range["C" + row].Text = "Date of HVAT/ Enrollment";
    //                        worksheet.Range["C" + row].ColumnWidth = 20;

    //                        worksheet.Range["D" + row].Text = "Enrollement Quarter";
    //                        worksheet.Range["D" + row].ColumnWidth = 20;

    //                        worksheet.Range["E" + row].Text = "District";
    //                        worksheet.Range["E" + row].ColumnWidth = 20;

    //                        worksheet.Range["F" + row].Text = "Sub county";
    //                        worksheet.Range["F" + row].ColumnWidth = 20;

    //                        worksheet.Range["G" + row].Text = "Parish";
    //                        worksheet.Range["G" + row].ColumnWidth = 20;

    //                        worksheet.Range["H" + row].Text = "Village";
    //                        worksheet.Range["H" + row].ColumnWidth = 20;

    //                        worksheet.Range["I" + row].Text = "Name of HH Head";
    //                        worksheet.Range["I" + row].ColumnWidth = 20;

    //                        worksheet.Range["J" + row].Text = "Beneficiary is a caregiver";
    //                        worksheet.Range["J" + row].ColumnWidth = 20;

    //                        worksheet.Range["K" + row].Text = "Caregiver Coded";
    //                        worksheet.Range["K" + row].ColumnWidth = 20;

    //                        worksheet.Range["L" + row].Text = "Other Adult";
    //                        worksheet.Range["L" + row].ColumnWidth = 20;

    //                        worksheet.Range["M" + row].Text = "No. of Primary Caregivers in HH";
    //                        worksheet.Range["M" + row].ColumnWidth = 20;

    //                        worksheet.Range["N" + row].Text = "Beneficiary Name";
    //                        worksheet.Range["N" + row].ColumnWidth = 20;

    //                        worksheet.Range["O" + row].Text = "Date of birth";
    //                        worksheet.Range["O" + row].ColumnWidth = 20;

    //                        worksheet.Range["P" + row].Text = "Age";
    //                        worksheet.Range["P" + row].ColumnWidth = 20;

    //                        worksheet.Range["Q" + row].Text = "Beneficiary Classification";
    //                        worksheet.Range["Q" + row].ColumnWidth = 20;

    //                        worksheet.Range["R" + row].Text = "Special Age classification";
    //                        worksheet.Range["R" + row].ColumnWidth = 20;

    //                        worksheet.Range["S" + row].Text = "sex";
    //                        worksheet.Range["S" + row].ColumnWidth = 20;

    //                        worksheet.Range["T" + row].Text = "Age category of HH Beneficiary";
    //                        worksheet.Range["T" + row].ColumnWidth = 20;

    //                        worksheet.Range["U" + row].Text = "Known Risk Factor";
    //                        worksheet.Range["U" + row].ColumnWidth = 20;

    //                        worksheet.Range["V" + row].Text = "Program participation status Quarterly HVF";
    //                        worksheet.Range["V" + row].ColumnWidth = 20;

    //                        worksheet.Range["W" + row].Text = "HH Visited this Quarter";
    //                        worksheet.Range["W" + row].ColumnWidth = 20;

    //                        worksheet.Range["X" + row].Text = "OVC is enrolled in School?";
    //                        worksheet.Range["X" + row].ColumnWidth = 20;

    //                        worksheet.Range["Y" + row].Text = "Current Class";
    //                        worksheet.Range["Y" + row].ColumnWidth = 20;

    //                        worksheet.Range["Z" + row].Text = "Candidate Class Completed";
    //                        worksheet.Range["Z" + row].ColumnWidth = 20;

    //                        worksheet.Range["AA" + row].Text = "Attendance";
    //                        worksheet.Range["AA" + row].ColumnWidth = 20;

    //                        worksheet.Range["AB" + row].Text = "18-20 years in school or completing apprenticeship";
    //                        worksheet.Range["AB" + row].ColumnWidth = 20;

    //                        worksheet.Range["AC" + row].Text = "Service Required Stable";
    //                        worksheet.Range["AC" + row].ColumnWidth = 20;

    //                        worksheet.Range["AD" + row].Text = "Service Required School";
    //                        worksheet.Range["AD" + row].ColumnWidth = 20;

    //                        worksheet.Range["AE" + row].Text = "Service Required Safe";
    //                        worksheet.Range["AE" + row].ColumnWidth = 20;

    //                        worksheet.Range["AF" + row].Text = "Service Required Health";
    //                        worksheet.Range["AF" + row].ColumnWidth = 20;

    //                        worksheet.Range["AG" + row].Text = "HIV Status at Enrollment";
    //                        worksheet.Range["AG" + row].ColumnWidth = 20;

    //                        worksheet.Range["AH" + row].Text = "Current HIV Status";
    //                        worksheet.Range["AH" + row].ColumnWidth = 20;

    //                        worksheet.Range["AI" + row].Text = "HIV Risk Assessed";
    //                        worksheet.Range["AI" + row].ColumnWidth = 20;

    //                        worksheet.Range["AJ" + row].Text = "TB Risk Assessed";
    //                        worksheet.Range["AJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["AK" + row].Text = "HIV Status Unknown and Risk Assessed";
    //                        worksheet.Range["AK" + row].ColumnWidth = 20;

    //                        worksheet.Range["AL" + row].Text = "Total HIV Risk Qns with Yes";
    //                        worksheet.Range["AL" + row].ColumnWidth = 20;

    //                        worksheet.Range["AM" + row].Text = "Total TB Risk Qns with Yes";
    //                        worksheet.Range["AM" + row].ColumnWidth = 20;

    //                        worksheet.Range["AN" + row].Text = "Not At Risk of HIV";
    //                        worksheet.Range["AN" + row].ColumnWidth = 20;

    //                        worksheet.Range["AO" + row].Text = "At Risk of HIV";
    //                        worksheet.Range["AO" + row].ColumnWidth = 20;

    //                        worksheet.Range["AP" + row].Text = "At Risk for TB";
    //                        worksheet.Range["AP" + row].ColumnWidth = 20;

    //                        worksheet.Range["AQ" + row].Text = "Linked_to_HTS";
    //                        worksheet.Range["AQ" + row].ColumnWidth = 20;

    //                        worksheet.Range["AR" + row].Text = "Tested_for_HIV";
    //                        worksheet.Range["AR" + row].ColumnWidth = 20;

    //                        worksheet.Range["AS" + row].Text = "HIV Test Results";
    //                        worksheet.Range["AS" + row].ColumnWidth = 20;

    //                        worksheet.Range["AT" + row].Text = "HIV Test Result Date";
    //                        worksheet.Range["AT" + row].ColumnWidth = 20;

    //                        worksheet.Range["AU" + row].Text = "Linked to ART";
    //                        worksheet.Range["AU" + row].ColumnWidth = 20;

    //                        worksheet.Range["AV" + row].Text = "Newly_Reported_ HIV_Postive";
    //                        worksheet.Range["AV" + row].ColumnWidth = 20;

    //                        worksheet.Range["AW" + row].Text = "Newly_Tested_HIV_Positive";
    //                        worksheet.Range["AW" + row].ColumnWidth = 20;

    //                        worksheet.Range["AX" + row].Text = "Newly_Tested_HIV_Positive_on_ART";
    //                        worksheet.Range["AX" + row].ColumnWidth = 20;

    //                        worksheet.Range["AY" + row].Text = "On_ART";
    //                        worksheet.Range["AY" + row].ColumnWidth = 20;

    //                        worksheet.Range["AZ" + row].Text = "ART_No.";
    //                        worksheet.Range["AZ" + row].ColumnWidth = 20;

    //                        worksheet.Range["BA" + row].Text = "Facility of Care_HIV-TB Risk Ass";
    //                        worksheet.Range["BA" + row].ColumnWidth = 20;

    //                        worksheet.Range["BB" + row].Text = "Client ART COHORT No.";
    //                        worksheet.Range["BB" + row].ColumnWidth = 20;

    //                        worksheet.Range["BC" + row].Text = "Client Tracked for VL";
    //                        worksheet.Range["BC" + row].ColumnWidth = 20;

    //                        worksheet.Range["BD" + row].Text = "Duration On Treatment (Months)";
    //                        worksheet.Range["BD" + row].ColumnWidth = 20;

    //                        worksheet.Range["BE" + row].Text = "Modality of Treatment";
    //                        worksheet.Range["BE" + row].ColumnWidth = 20;

    //                        worksheet.Range["BF" + row].Text = "Modality of Drug Dispensing";
    //                        worksheet.Range["BF" + row].ColumnWidth = 20;

    //                        worksheet.Range["BG" + row].Text = "Client Eligible for VL";
    //                        worksheet.Range["BG" + row].ColumnWidth = 20;

    //                        worksheet.Range["BH" + row].Text = "Viral Load Test Done";
    //                        worksheet.Range["BH" + row].ColumnWidth = 20;

    //                        worksheet.Range["BI" + row].Text = "Viral Load Test Results Received";
    //                        worksheet.Range["BI" + row].ColumnWidth = 20;

    //                        worksheet.Range["BJ" + row].Text = "Viral Load Test Copies/mls";
    //                        worksheet.Range["BJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["BK" + row].Text = "Viral Load Test Results";
    //                        worksheet.Range["BK" + row].ColumnWidth = 20;

    //                        worksheet.Range["BL" + row].Text = "1a. Cash transfer (project)";
    //                        worksheet.Range["BL" + row].ColumnWidth = 20;

    //                        worksheet.Range["BM" + row].Text = "1b. Emergency cash support (VSLA+)";
    //                        worksheet.Range["BM" + row].ColumnWidth = 20;

    //                        worksheet.Range["BN" + row].Text = "1c. Access to Saving & Credit (VSLA)";
    //                        worksheet.Range["BN" + row].ColumnWidth = 20;

    //                        worksheet.Range["BO" + row].Text = "Member of a  VSLA";
    //                        worksheet.Range["BO" + row].ColumnWidth = 20;

    //                        worksheet.Range["BP" + row].Text = "Cummulative saving to date_to date";
    //                        worksheet.Range["BP" + row].ColumnWidth = 20;

    //                        worksheet.Range["BQ" + row].Text = "Amount Borrowed ";
    //                        worksheet.Range["BQ" + row].ColumnWidth = 20;

    //                        worksheet.Range["BR" + row].Text = "OVC_FUND Contribution_to date";
    //                        worksheet.Range["BR" + row].ColumnWidth = 20;

    //                        worksheet.Range["BS" + row].Text = "1d. Supported to own & run an IGA";
    //                        worksheet.Range["BS" + row].ColumnWidth = 20;

    //                        worksheet.Range["BT" + row].Text = "1e. Received IGA training & boost";
    //                        worksheet.Range["BT" + row].ColumnWidth = 20;

    //                        worksheet.Range["BU" + row].Text = "1f. Received business skills training (F.L & SPM)";
    //                        worksheet.Range["BU" + row].ColumnWidth = 20;

    //                        worksheet.Range["BV" + row].Text = "1g. Apprenticeship attachment";
    //                        worksheet.Range["BV" + row].ColumnWidth = 20;

    //                        worksheet.Range["BW" + row].Text = "1h. Received soft skill training (basket, briquette, jewelry, mats & brick making) ";
    //                        worksheet.Range["BW" + row].ColumnWidth = 20;

    //                        worksheet.Range["BX" + row].Text = "1i. Provided startup kit or capital";
    //                        worksheet.Range["BX" + row].ColumnWidth = 20;

    //                        worksheet.Range["BY" + row].Text = "1j. Referred to ES service";
    //                        worksheet.Range["BY" + row].ColumnWidth = 20;

    //                        worksheet.Range["BZ" + row].Text = "Core_Economic Stability(HomeVisits)";
    //                        worksheet.Range["BZ" + row].ColumnWidth = 20;

    //                        worksheet.Range["CA" + row].Text = "4a. Supported to enroll/ re-enroll in school";
    //                        worksheet.Range["CA" + row].ColumnWidth = 20;

    //                        worksheet.Range["CB" + row].Text = "4b. Monitored for regular attendance";
    //                        worksheet.Range["CB" + row].ColumnWidth = 20;

    //                        worksheet.Range["CC" + row].Text = "4c. Provided school fees bursary";
    //                        worksheet.Range["CC" + row].ColumnWidth = 20;

    //                        worksheet.Range["CD" + row].Text = "4d. Provided school meals";
    //                        worksheet.Range["CD" + row].ColumnWidth = 20;

    //                        worksheet.Range["CE" + row].Text = "4e. Provided with school uniform";
    //                        worksheet.Range["CE" + row].ColumnWidth = 20;

    //                        worksheet.Range["CF" + row].Text = "4f. Provided scholastic / reading materials";
    //                        worksheet.Range["CF" + row].ColumnWidth = 20;

    //                        worksheet.Range["CG" + row].Text = "4g. Provided vocational education";
    //                        worksheet.Range["CG" + row].ColumnWidth = 20;

    //                        worksheet.Range["CH" + row].Text = "4h. Caregiver received ECD training";
    //                        worksheet.Range["CH" + row].ColumnWidth = 20;

    //                        worksheet.Range["CI" + row].Text = "4i. Referred for E&D services";
    //                        worksheet.Range["CI" + row].ColumnWidth = 20;

    //                        worksheet.Range["CJ" + row].Text = "Core_Education(HomeVisits)";
    //                        worksheet.Range["CJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["CK" + row].Text = "5a. Provided Counselling & Guidance";
    //                        worksheet.Range["CK" + row].ColumnWidth = 20;

    //                        worksheet.Range["CL" + row].Text = "5b. Supported to access basic need";
    //                        worksheet.Range["CL" + row].ColumnWidth = 20;

    //                        worksheet.Range["CM" + row].Text = "5c. Supported to access to recreation activities";
    //                        worksheet.Range["CM" + row].ColumnWidth = 20;

    //                        worksheet.Range["CN" + row].Text = "5d. Provided palliative care for HIV positive";
    //                        worksheet.Range["CN" + row].ColumnWidth = 20;

    //                        worksheet.Range["CO" + row].Text = "5e. Provided Post-violence trauma-informed counselling";
    //                        worksheet.Range["CO" + row].ColumnWidth = 20;

    //                        worksheet.Range["CP" + row].Text = "5f. Provided Clothing & Beddings";
    //                        worksheet.Range["CP" + row].ColumnWidth = 20;

    //                        worksheet.Range["CQ" + row].Text = "5g. Referred to access other PSS services";
    //                        worksheet.Range["CQ" + row].ColumnWidth = 20;

    //                        worksheet.Range["CR" + row].Text = "Core_PSS(HomeVisits)";
    //                        worksheet.Range["CR" + row].ColumnWidth = 20;

    //                        worksheet.Range["CS" + row].Text = "6a. Legal support for GBV victims";
    //                        worksheet.Range["CS" + row].ColumnWidth = 20;

    //                        worksheet.Range["CT" + row].Text = "6b. Provided Positive Parenting training";
    //                        worksheet.Range["CT" + row].ColumnWidth = 20;

    //                        worksheet.Range["CU" + row].Text = "6c. Supported to handle child neglect & abusive";
    //                        worksheet.Range["CU" + row].ColumnWidth = 20;

    //                        worksheet.Range["CV" + row].Text = "6d. Supported to register birth";
    //                        worksheet.Range["CV" + row].ColumnWidth = 20;

    //                        worksheet.Range["CW" + row].Text = "6e. Participated in community sensitization on CP";
    //                        worksheet.Range["CW" + row].ColumnWidth = 20;

    //                        worksheet.Range["CX" + row].Text = "6f. Supported to withdraw from child labour";
    //                        worksheet.Range["CX" + row].ColumnWidth = 20;

    //                        worksheet.Range["CY" + row].Text = "6g. Supported Child re-integration with Family";
    //                        worksheet.Range["CY" + row].ColumnWidth = 20;

    //                        worksheet.Range["CZ" + row].Text = "6h. Provided SBCC on violence prevention & reporting (GBV, SVAC).";
    //                        worksheet.Range["CZ" + row].ColumnWidth = 20;

    //                        worksheet.Range["DA" + row].Text = "6i. Referred to access other Protection services";
    //                        worksheet.Range["DA" + row].ColumnWidth = 20;

    //                        worksheet.Range["DB" + row].Text = "Core_Protection (Home Visits)";
    //                        worksheet.Range["DB" + row].ColumnWidth = 20;

    //                        worksheet.Range["DC" + row].Text = "2a. Nutrition Education & Counselling(HomeVisits)";
    //                        worksheet.Range["DC" + row].ColumnWidth = 20;

    //                        worksheet.Range["DD" + row].Text = "2b. Food Relief/ Supplement Assistance";
    //                        worksheet.Range["DD" + row].ColumnWidth = 20;

    //                        worksheet.Range["DE" + row].Text = "2c. Trained on good agronomic practices";
    //                        worksheet.Range["DE" + row].ColumnWidth = 20;

    //                        worksheet.Range["DF" + row].Text = "2d. Received Farming Inputs";
    //                        worksheet.Range["DF" + row].ColumnWidth = 20;

    //                        worksheet.Range["DG" + row].Text = "2e. Received Agric. Advisory Services";
    //                        worksheet.Range["DG" + row].ColumnWidth = 20;

    //                        worksheet.Range["DH" + row].Text = "2f. Supported to access output markets";
    //                        worksheet.Range["DH" + row].ColumnWidth = 20;

    //                        worksheet.Range["DI" + row].Text = "2g. Supported to access Post-Harvest handling";
    //                        worksheet.Range["DI" + row].ColumnWidth = 20;

    //                        worksheet.Range["DJ" + row].Text = "2h. Provided Nutrition Assessment (MUAC)";
    //                        worksheet.Range["DJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["DK" + row].Text = "2i. Supported to setup Vegetable/ Backyard gardening ";
    //                        worksheet.Range["DK" + row].ColumnWidth = 20;

    //                        worksheet.Range["DL" + row].Text = "2j. Beneficiary supported to access Farmer field schools";
    //                        worksheet.Range["DL" + row].ColumnWidth = 20;

    //                        worksheet.Range["DM" + row].Text = "2k. Referred to access other FSN services";
    //                        worksheet.Range["DM" + row].ColumnWidth = 20;

    //                        worksheet.Range["DN" + row].Text = "Core_Food Security & Nutrition(HomeVisits)";
    //                        worksheet.Range["DN" + row].ColumnWidth = 20;

    //                        worksheet.Range["DO" + row].Text = "3a. Assisted to access safe water";
    //                        worksheet.Range["DO" + row].ColumnWidth = 20;

    //                        worksheet.Range["DP" + row].Text = "3b. Provided with stable shelter";
    //                        worksheet.Range["DP" + row].ColumnWidth = 20;

    //                        worksheet.Range["DQ" + row].Text = "3c. Supported to access a pit latrine";
    //                        worksheet.Range["DQ" + row].ColumnWidth = 20;

    //                        worksheet.Range["DR" + row].Text = "3d. Supported to maintain a standard hand washing facility";
    //                        worksheet.Range["DR" + row].ColumnWidth = 20;

    //                        worksheet.Range["DS" + row].Text = "3e. Provided/ supported to access ITNs";
    //                        worksheet.Range["DS" + row].ColumnWidth = 20;

    //                        worksheet.Range["DT" + row].Text = "3f. Provided SBCC on WASH";
    //                        worksheet.Range["DT" + row].ColumnWidth = 20;

    //                        worksheet.Range["DU" + row].Text = "3g. Supported to access immunization";
    //                        worksheet.Range["DU" + row].ColumnWidth = 20;

    //                        worksheet.Range["DV" + row].Text = "3h. Supported to access antenatal care";
    //                        worksheet.Range["DV" + row].ColumnWidth = 20;

    //                        worksheet.Range["DW" + row].Text = "3i. Supported to access youth friendly services";
    //                        worksheet.Range["DW" + row].ColumnWidth = 20;

    //                        worksheet.Range["DX" + row].Text = "3j. Provided SBCC on Malaria Prevention";
    //                        worksheet.Range["DX" + row].ColumnWidth = 20;

    //                        worksheet.Range["DY" + row].Text = "3k. Supported to access IPT for Pregnant Mothers";
    //                        worksheet.Range["DY" + row].ColumnWidth = 20;

    //                        worksheet.Range["DZ" + row].Text = "3l. HH supported to access IRS for Malaria Prevention";
    //                        worksheet.Range["DZ" + row].ColumnWidth = 20;

    //                        worksheet.Range["EA" + row].Text = "3m. Supported to access Family Planning services";
    //                        worksheet.Range["EA" + row].ColumnWidth = 20;

    //                        worksheet.Range["EB" + row].Text = "3n. Referred to access other family health services ";
    //                        worksheet.Range["EB" + row].ColumnWidth = 20;

    //                        worksheet.Range["EC" + row].Text = "7a. HIV risk assessment & HIV pre-test counselling";
    //                        worksheet.Range["EC" + row].ColumnWidth = 20;

    //                        worksheet.Range["ED" + row].Text = "7b. Supported to test for HIV and receive HIV results";
    //                        worksheet.Range["ED" + row].ColumnWidth = 20;

    //                        worksheet.Range["EE" + row].Text = "7c. Provided HIV post-test counseling ";
    //                        worksheet.Range["EE" + row].ColumnWidth = 20;

    //                        worksheet.Range["EF" + row].Text = "7d. Supported to disclose HIV status to family";
    //                        worksheet.Range["EF" + row].ColumnWidth = 20;

    //                        worksheet.Range["EG" + row].Text = "7e. Supported to enroll on ART";
    //                        worksheet.Range["EG" + row].ColumnWidth = 20;

    //                        worksheet.Range["EH" + row].Text = "7f. Supported to access ART refills";
    //                        worksheet.Range["EH" + row].ColumnWidth = 20;

    //                        worksheet.Range["EI" + row].Text = "7g. Provided  ART adherence support";
    //                        worksheet.Range["EI" + row].ColumnWidth = 20;

    //                        worksheet.Range["EJ" + row].Text = "7h. Supported to test for VL";
    //                        worksheet.Range["EJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["EK" + row].Text = "7i. Supported to receive VL results";
    //                        worksheet.Range["EK" + row].ColumnWidth = 20;

    //                        worksheet.Range["EL" + row].Text = "7j. Provided IAC for Non-Suppression";
    //                        worksheet.Range["EL" + row].ColumnWidth = 20;

    //                        worksheet.Range["EM" + row].Text = "7k. Referred for HIV TCT Services";
    //                        worksheet.Range["EM" + row].ColumnWidth = 20;

    //                        worksheet.Range["EN" + row].Text = "8a. Provided eMTCT services";
    //                        worksheet.Range["EN" + row].ColumnWidth = 20;

    //                        worksheet.Range["EO" + row].Text = "8b. Supported to access PrEP";
    //                        worksheet.Range["EO" + row].ColumnWidth = 20;

    //                        worksheet.Range["EP" + row].Text = "8c. Provided condoms";
    //                        worksheet.Range["EP" + row].ColumnWidth = 20;

    //                        worksheet.Range["EQ" + row].Text = "8d. Supported to access VMMC/ SMC";
    //                        worksheet.Range["EQ" + row].ColumnWidth = 20;

    //                        worksheet.Range["ER" + row].Text = "8e. Provided SBCC on HIV prevention & education";
    //                        worksheet.Range["ER" + row].ColumnWidth = 20;

    //                        worksheet.Range["ES" + row].Text = "8f. Supported to access PEP";
    //                        worksheet.Range["ES" + row].ColumnWidth = 20;

    //                        worksheet.Range["ET" + row].Text = "8g. Provided with Self-Awareness Knowledge on HIV prevention";
    //                        worksheet.Range["ET" + row].ColumnWidth = 20;

    //                        worksheet.Range["EU" + row].Text = "8h. Referred to access other HIV prevention services";
    //                        worksheet.Range["EU" + row].ColumnWidth = 20;

    //                        worksheet.Range["EV" + row].Text = "Core_Health(HomeVisits)";
    //                        worksheet.Range["EV" + row].ColumnWidth = 20;

    //                        worksheet.Range["EW" + row].Text = "Current Reporting Quarter Layering";
    //                        worksheet.Range["EW" + row].ColumnWidth = 20;

    //                        worksheet.Range["EX" + row].Text = "Served in Previous Quarter";
    //                        worksheet.Range["EX" + row].ColumnWidth = 20;

    //                        worksheet.Range["EY" + row].Text = "Graduated";
    //                        worksheet.Range["EY" + row].ColumnWidth = 20;

    //                        worksheet.Range["EZ" + row].Text = "Exited Without Graduation";
    //                        worksheet.Range["EZ" + row].ColumnWidth = 20;

    //                        worksheet.Range["FA" + row].Text = "Inactive (Died, Relocated, LTFU)";
    //                        worksheet.Range["FA" + row].ColumnWidth = 20;

    //                        worksheet.Range["FB" + row].Text = "Transferred out to PEPFAR IP";
    //                        worksheet.Range["FB" + row].ColumnWidth = 20;

    //                        worksheet.Range["FC" + row].Text = "Transferred out to Non-PEPFAR IP/ Government";
    //                        worksheet.Range["FC" + row].ColumnWidth = 20;

    //                        worksheet.Range["FD" + row].Text = "OVC_UNK_REF";
    //                        worksheet.Range["FD" + row].ColumnWidth = 20;

    //                        worksheet.Range["FE" + row].Text = "OVC_ REACH";
    //                        worksheet.Range["FE" + row].ColumnWidth = 20;

    //                        worksheet.Range["FF" + row].Text = "OVC_AGREE_TST";
    //                        worksheet.Range["FF" + row].ColumnWidth = 20;

    //                        worksheet.Range["FG" + row].Text = "OVC_TEST";
    //                        worksheet.Range["FG" + row].ColumnWidth = 20;

    //                        worksheet.Range["FH" + row].Text = "OVC_VL_ELIGIBLE";
    //                        worksheet.Range["FH" + row].ColumnWidth = 20;

    //                        worksheet.Range["FI" + row].Text = "OVC_VLR";
    //                        worksheet.Range["FI" + row].ColumnWidth = 20;

    //                        worksheet.Range["FJ" + row].Text = "OVC_VLS";
    //                        worksheet.Range["FJ" + row].ColumnWidth = 20;

    //                        worksheet.Range["A" + row + ":FJ" + row].CellStyle = headerStyle;

    //                        worksheet.Range["BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["BZ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["CJ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["CR" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["DB" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["DN" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["EV" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        worksheet.Range["EW" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                        worksheet.Range["EW" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
    //                        #endregion Header row

    //                        row++;
    //                        foreach(var n in Members)
    //                        {
    //                            var _identificationRegister = identificationRegister.FirstOrDefault(o => o.HouseHoldId == n.HouseHoldId);
    //                            var identification = Hvatdata.FirstOrDefault(o => o.HouseHoldId == n.HouseHoldId);
    //                            var _TrackingFormExposedInfants = TrackingFormExposedInfants.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _assessment = Assessment.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _trackingtool = trackingtool.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _Vslagroupmembers= Vslagroupmembers.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _GraduationCheclist = GraduationCheclist.Where(o => o.HouseHoldMemberId == n.HouseHoldMemberId).ToList();
    //                            var _HomeVisit = HomeVisit.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _PreviousHomeVisit= PreviousHomeVisit.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _ServicesProvided = ServicesProvided.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);

    //                            worksheet.Range["D" + row].Text = n.Enrollement_Quarter;
    //                            worksheet.Range["A" + row].Text = _identificationRegister.HouseHoldCode;
    //                            worksheet.Range["E" + row].Text = _identificationRegister.DistrictDescription;

    //                            worksheet.Range["F" + row].Text = _identificationRegister.SubcountyDescription;

    //                            worksheet.Range["G" + row].Text = _identificationRegister.ParishDescription;

    //                            worksheet.Range["H" + row].Text = _identificationRegister.VillageDescription;

    //                            //if (identification != null)
    //                            //{
    //                            //    worksheet.Range["A" + row].Text = identification.HouseHoldCode;
    //                            //    worksheet.Range["D" + row].Text = n.Enrollement_Quarter;

    //                            //    worksheet.Range["E" + row].Text = identification.DistrictDescription;

    //                            //    worksheet.Range["F" + row].Text = identification.SubcountyDescription;

    //                            //    worksheet.Range["G" + row].Text = identification.ParishDescription;

    //                            //    worksheet.Range["H" + row].Text = identification.VillageDescription;
    //                            //}
    //                            //else
    //                            //{
    //                            //    worksheet.Range["A" + row].Text = _identificationRegister.HouseHoldCode;
    //                            //    worksheet.Range["E" + row].Text = _identificationRegister.DistrictDescription;

    //                            //    worksheet.Range["F" + row].Text = _identificationRegister.SubcountyDescription;

    //                            //    worksheet.Range["G" + row].Text = _identificationRegister.ParishDescription;

    //                            //    worksheet.Range["H" + row].Text = _identificationRegister.VillageDescription;
    //                            //}

    //                            worksheet.Range["B" + row].Text = n.HouseHoldMemberCode;

    //                            if (n.EnrollmentDate.HasValue)
    //                            {
    //                                worksheet.Range["C" + row].Text = n.EnrollmentDate.Value.ToString("dd/MM/yyyy");
    //                            }



    //                            string hhdName = string.Empty;
    //                            var hhD = Members.FirstOrDefault(o => o.HouseHoldId == n.HouseHoldId && o.Caregiver_Coded == 1);
    //                            if (hhD != null)
    //                            {
    //                                worksheet.Range["I" + row].Text = hhD.HouseHoldMemberName;
    //                            }

    //                            worksheet.Range["J" + row].Number = n.Beneficiary_is_a_caregiver;

    //                            worksheet.Range["K" + row].Text = n.Caregiver_CodedDesc;

    //                            worksheet.Range["L" + row].Number = n.Other_Adult;
    //                            int caretakerNo = Members.Where(o => o.HouseHoldId == n.HouseHoldId && o.Caregiver_Coded == 1).ToList().Count;

    //                            worksheet.Range["M" + row].Number = caretakerNo;

    //                            worksheet.Range["N" + row].Text = n.HouseHoldMemberName;

    //                            if (n.DoB.HasValue)
    //                            {
    //                                worksheet.Range["O" + row].Text = n.DoB.Value.ToString("dd/MM/yyyy");
    //                            }

    //                            if (n.Age.HasValue)
    //                            {
    //                                worksheet.Range["P" + row].Number = n.Age.Value;
    //                            }

    //                            worksheet.Range["R" + row].Text = n.SpecialAgeClassification;

    //                            worksheet.Range["S" + row].Text = n.GenderDescription;
    //                            worksheet.Range["T" + row].Text = n.AgeCategoryHHBeneficiary;

    //                            worksheet.Range["U" + row].Text = n.KnownRiskFactorDescription;



    //                            worksheet.Range["AB" + row].Text = n.schoolcompletingapprenticeshipDesc;


    //                            worksheet.Range["AG" + row].Text = n.HIVStatusDescription;

    //                            if (_HomeVisit != null)
    //                            {
    //                                if (_HomeVisit.ProgramParticipationId.HasValue)
    //                                {
    //                                    var p = programParticipation.FirstOrDefault(o => o.ProgramParticipationId == _HomeVisit.ProgramParticipationId);
    //                                    worksheet.Range["V" + row].Text = p.ProgramParticipationDescription;
    //                                }
    //                                if (_HomeVisit.ProgramParticipation_Inactive.HasValue)
    //                                {
    //                                    worksheet.Range["FA" + row].Number = _HomeVisit.ProgramParticipation_Inactive.Value;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["FA" + row].Number = 0;
    //                                }

    //                                if (_HomeVisit.Transferred_out_to_PEPFAR_IP.HasValue)
    //                                {
    //                                    worksheet.Range["FB" + row].Number = _HomeVisit.Transferred_out_to_PEPFAR_IP.Value;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["FB" + row].Number = 0;
    //                                }

    //                                if (_HomeVisit.Transferred_out_to_Non_PEPFAR_IP.HasValue)
    //                                {
    //                                    worksheet.Range["FC" + row].Number = _HomeVisit.Transferred_out_to_Non_PEPFAR_IP.Value;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["FC" + row].Number = 0;
    //                                }

    //                                worksheet.Range["W" + row].Number = 1;
    //                                int Core_Economic_Stability = 0;
    //                                if (!string.IsNullOrEmpty(_HomeVisit.Stable))
    //                                {
    //                                    var a = _HomeVisit.Stable.Split(",");
    //                                    if (a.Any(m=> m == "1"))
    //                                    {
    //                                        worksheet.Range["BL" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BL" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "2"))
    //                                    {
    //                                        worksheet.Range["BM" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BM" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "3"))
    //                                    {
    //                                        worksheet.Range["BN" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BN" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "4"))
    //                                    {
    //                                        worksheet.Range["BS" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BS" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "5"))
    //                                    {
    //                                        worksheet.Range["BT" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BT" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "6"))
    //                                    {
    //                                        worksheet.Range["BU" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BU" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "7"))
    //                                    {
    //                                        worksheet.Range["BV" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BV" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "8"))
    //                                    {
    //                                        worksheet.Range["BW" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BW" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "9"))
    //                                    {
    //                                        worksheet.Range["BX" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BX" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "10"))
    //                                    {
    //                                        worksheet.Range["BY" + row].Number = 1;
    //                                        Core_Economic_Stability = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["BY" + row].Number = 0;
    //                                    }
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["BL" + row].Number = 0;
    //                                    worksheet.Range["BM" + row].Number = 0;
    //                                    worksheet.Range["BN" + row].Number = 0;
    //                                    worksheet.Range["BS" + row].Number = 0;
    //                                    worksheet.Range["BT" + row].Number = 0;
    //                                    worksheet.Range["BU" + row].Number = 0;
    //                                    worksheet.Range["BV" + row].Number = 0;
    //                                    worksheet.Range["BW" + row].Number = 0;
    //                                    worksheet.Range["BX" + row].Number = 0;
    //                                    worksheet.Range["BY" + row].Number = 0;
    //                                }
    //                                worksheet.Range["BZ" + row].Number = Core_Economic_Stability;

    //                                int Core_Education = 0;
    //                                if (!string.IsNullOrEmpty(_HomeVisit.Schooled))
    //                                {
    //                                    var a = _HomeVisit.Schooled.Split(",");
    //                                    if (a.Any(m => m == "11"))
    //                                    {
    //                                        worksheet.Range["CA" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CA" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "12"))
    //                                    {
    //                                        worksheet.Range["CB" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CB" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "13"))
    //                                    {
    //                                        worksheet.Range["CC" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CC" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "14"))
    //                                    {
    //                                        worksheet.Range["CD" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CD" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "15"))
    //                                    {
    //                                        worksheet.Range["CE" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CE" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "16"))
    //                                    {
    //                                        worksheet.Range["CF" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CF" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "17"))
    //                                    {
    //                                        worksheet.Range["CG" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CG" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "18"))
    //                                    {
    //                                        worksheet.Range["CH" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CH" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "19"))
    //                                    {
    //                                        worksheet.Range["CI" + row].Number = 1;
    //                                        Core_Education = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CI" + row].Number = 0;
    //                                    }
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["CA" + row].Number = 0;
    //                                    worksheet.Range["CB" + row].Number = 0;
    //                                    worksheet.Range["CC" + row].Number = 0;
    //                                    worksheet.Range["CD" + row].Number = 0;
    //                                    worksheet.Range["CE" + row].Number = 0;
    //                                    worksheet.Range["CF" + row].Number = 0;
    //                                    worksheet.Range["CG" + row].Number = 0;
    //                                    worksheet.Range["CH" + row].Number = 0;
    //                                    worksheet.Range["CI" + row].Number = 0;
    //                                }

    //                                worksheet.Range["CJ" + row].Number = Core_Education;

    //                                int Core_PSS = 0;
    //                                int Core_Protection = 0;
    //                                if (!string.IsNullOrEmpty(_HomeVisit.Safe))
    //                                {
    //                                    var a = _HomeVisit.Safe.Split(",");
    //                                    if (a.Any(m => m == "20"))
    //                                    {
    //                                        worksheet.Range["CK" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CK" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "21"))
    //                                    {
    //                                        worksheet.Range["CL" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CL" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "22"))
    //                                    {
    //                                        worksheet.Range["CM" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CM" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "23"))
    //                                    {
    //                                        worksheet.Range["CN" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CN" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "24"))
    //                                    {
    //                                        worksheet.Range["CO" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CO" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "25"))
    //                                    {
    //                                        worksheet.Range["CP" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CP" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "26"))
    //                                    {
    //                                        worksheet.Range["CQ" + row].Number = 1;
    //                                        Core_PSS = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CQ" + row].Number = 0;
    //                                    }


    //                                    if (a.Any(m => m == "27"))
    //                                    {
    //                                        worksheet.Range["CS" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CS" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "28"))
    //                                    {
    //                                        worksheet.Range["CT" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CT" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "32"))
    //                                    {
    //                                        worksheet.Range["CU" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CU" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "29"))
    //                                    {
    //                                        worksheet.Range["CV" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CV" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "30"))
    //                                    {
    //                                        worksheet.Range["CW" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CW" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "31"))
    //                                    {
    //                                        worksheet.Range["CX" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CX" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "33"))
    //                                    {
    //                                        worksheet.Range["CY" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CY" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "34"))
    //                                    {
    //                                        worksheet.Range["CZ" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["CZ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "35"))
    //                                    {
    //                                        worksheet.Range["DA" + row].Number = 1;
    //                                        Core_Protection = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DA" + row].Number = 0;
    //                                    }
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["CK" + row].Number = 0;
    //                                    worksheet.Range["CL" + row].Number = 0;
    //                                    worksheet.Range["CM" + row].Number = 0;
    //                                    worksheet.Range["CN" + row].Number = 0;
    //                                    worksheet.Range["CO" + row].Number = 0;
    //                                    worksheet.Range["CP" + row].Number = 0;
    //                                    worksheet.Range["CQ" + row].Number = 0;

    //                                    worksheet.Range["CS" + row].Number = 0;
    //                                    worksheet.Range["CT" + row].Number = 0;
    //                                    worksheet.Range["CU" + row].Number = 0;
    //                                    worksheet.Range["CV" + row].Number = 0;
    //                                    worksheet.Range["CW" + row].Number = 0;
    //                                    worksheet.Range["CX" + row].Number = 0;
    //                                    worksheet.Range["CY" + row].Number = 0;
    //                                    worksheet.Range["CZ" + row].Number = 0;
    //                                    worksheet.Range["DA" + row].Number = 0;
    //                                }

    //                                worksheet.Range["CR" + row].Number = Core_PSS;
    //                                worksheet.Range["DB" + row].Number = Core_Protection;

    //                                int Core_Food_Security_Nutrition = 0;
    //                                int Core_Health = 0;
    //                                if (!string.IsNullOrEmpty(_HomeVisit.Healthy))
    //                                {
    //                                    var a = _HomeVisit.Healthy.Split(",");
    //                                    if (a.Any(m => m == "50"))
    //                                    {
    //                                        worksheet.Range["DC" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DC" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "51"))
    //                                    {
    //                                        worksheet.Range["DD" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DD" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "52"))
    //                                    {
    //                                        worksheet.Range["DE" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DE" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "53"))
    //                                    {
    //                                        worksheet.Range["DF" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DF" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "54"))
    //                                    {
    //                                        worksheet.Range["DG" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DG" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "55"))
    //                                    {
    //                                        worksheet.Range["DH" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DH" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "56"))
    //                                    {
    //                                        worksheet.Range["DI" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DI" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "57"))
    //                                    {
    //                                        worksheet.Range["DJ" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DJ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "58"))
    //                                    {
    //                                        worksheet.Range["DK" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DK" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "59"))
    //                                    {
    //                                        worksheet.Range["DL" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DL" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "60"))
    //                                    {
    //                                        worksheet.Range["DM" + row].Number = 1;
    //                                        Core_Food_Security_Nutrition = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DM" + row].Number = 0;
    //                                    }




    //                                    if (a.Any(m => m == "36"))
    //                                    {
    //                                        worksheet.Range["DO" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DO" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "37"))
    //                                    {
    //                                        worksheet.Range["DP" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DP" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "38"))
    //                                    {
    //                                        worksheet.Range["DQ" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DQ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "39"))
    //                                    {
    //                                        worksheet.Range["DR" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DR" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "40"))
    //                                    {
    //                                        worksheet.Range["DS" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DS" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "41"))
    //                                    {
    //                                        worksheet.Range["DT" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DT" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "42"))
    //                                    {
    //                                        worksheet.Range["DU" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DU" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "43"))
    //                                    {
    //                                        worksheet.Range["DV" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DV" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "44"))
    //                                    {
    //                                        worksheet.Range["DW" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DW" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "45"))
    //                                    {
    //                                        worksheet.Range["DX" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DX" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "46"))
    //                                    {
    //                                        worksheet.Range["DY" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DY" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "47"))
    //                                    {
    //                                        worksheet.Range["DZ" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["DZ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "48"))
    //                                    {
    //                                        worksheet.Range["EA" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EA" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "49"))
    //                                    {
    //                                        worksheet.Range["EB" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EB" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "61"))
    //                                    {
    //                                        worksheet.Range["EC" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EC" + row].Number = 0;
    //                                    }




    //                                    if (a.Any(m => m == "62"))
    //                                    {
    //                                        worksheet.Range["ED" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["ED" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "63"))
    //                                    {
    //                                        worksheet.Range["EE" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EE" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "64"))
    //                                    {
    //                                        worksheet.Range["EF" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EF" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "65"))
    //                                    {
    //                                        worksheet.Range["EG" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EG" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "66"))
    //                                    {
    //                                        worksheet.Range["EH" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EH" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "67"))
    //                                    {
    //                                        worksheet.Range["EI" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EI" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "68"))
    //                                    {
    //                                        worksheet.Range["EJ" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EJ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "69"))
    //                                    {
    //                                        worksheet.Range["EK" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EK" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "70"))
    //                                    {
    //                                        worksheet.Range["EL" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EL" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "71"))
    //                                    {
    //                                        worksheet.Range["EM" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EM" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "72"))
    //                                    {
    //                                        worksheet.Range["EN" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EN" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "73"))
    //                                    {
    //                                        worksheet.Range["EO" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EO" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "74"))
    //                                    {
    //                                        worksheet.Range["EP" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EP" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "75"))
    //                                    {
    //                                        worksheet.Range["EQ" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EQ" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "76"))
    //                                    {
    //                                        worksheet.Range["ER" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["ER" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "77"))
    //                                    {
    //                                        worksheet.Range["ES" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["ES" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "78"))
    //                                    {
    //                                        worksheet.Range["ET" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["ET" + row].Number = 0;
    //                                    }
    //                                    if (a.Any(m => m == "79"))
    //                                    {
    //                                        worksheet.Range["EU" + row].Number = 1;
    //                                        Core_Health = 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        worksheet.Range["EU" + row].Number = 0;
    //                                    }

    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["DC" + row].Number = 0;
    //                                    worksheet.Range["DD" + row].Number = 0;
    //                                    worksheet.Range["DE" + row].Number = 0;
    //                                    worksheet.Range["DF" + row].Number = 0;
    //                                    worksheet.Range["DG" + row].Number = 0;
    //                                    worksheet.Range["DH" + row].Number = 0;
    //                                    worksheet.Range["DI" + row].Number = 0;

    //                                    worksheet.Range["DK" + row].Number = 0;
    //                                    worksheet.Range["DL" + row].Number = 0;
    //                                    worksheet.Range["DM" + row].Number = 0;


    //                                    worksheet.Range["DO" + row].Number = 0;
    //                                    worksheet.Range["DP" + row].Number = 0;
    //                                    worksheet.Range["DQ" + row].Number = 0;
    //                                    worksheet.Range["DR" + row].Number = 0;
    //                                    worksheet.Range["DS" + row].Number = 0;
    //                                    worksheet.Range["DT" + row].Number = 0;
    //                                    worksheet.Range["DU" + row].Number = 0;
    //                                    worksheet.Range["DV" + row].Number = 0;
    //                                    worksheet.Range["DW" + row].Number = 0;
    //                                    worksheet.Range["DX" + row].Number = 0;
    //                                    worksheet.Range["DY" + row].Number = 0;
    //                                    worksheet.Range["DZ" + row].Number = 0;

    //                                    worksheet.Range["EA" + row].Number = 0;
    //                                    worksheet.Range["EB" + row].Number = 0;
    //                                    worksheet.Range["EC" + row].Number = 0;
    //                                    worksheet.Range["ED" + row].Number = 0;
    //                                    worksheet.Range["EE" + row].Number = 0;
    //                                    worksheet.Range["EF" + row].Number = 0;
    //                                    worksheet.Range["EG" + row].Number = 0;
    //                                    worksheet.Range["EH" + row].Number = 0;
    //                                    worksheet.Range["EI" + row].Number = 0;
    //                                    worksheet.Range["EJ" + row].Number = 0;
    //                                    worksheet.Range["EK" + row].Number = 0;
    //                                    worksheet.Range["EL" + row].Number = 0;
    //                                    worksheet.Range["EM" + row].Number = 0;
    //                                    worksheet.Range["EN" + row].Number = 0;
    //                                    worksheet.Range["EO" + row].Number = 0;
    //                                    worksheet.Range["EP" + row].Number = 0;
    //                                    worksheet.Range["EQ" + row].Number = 0;
    //                                    worksheet.Range["ER" + row].Number = 0;
    //                                    worksheet.Range["ES" + row].Number = 0;
    //                                    worksheet.Range["ET" + row].Number = 0;
    //                                    worksheet.Range["EU" + row].Number = 0;
    //                                }

    //                                worksheet.Range["DN" + row].Number = Core_Food_Security_Nutrition;

    //                                worksheet.Range["EV" + row].Number = Core_Health;
    //                                int Received_Core_service = 0;
    //                                if (Core_Economic_Stability == 1 || Core_Education == 1 || Core_PSS == 1 || Core_Protection == 1 || Core_Food_Security_Nutrition == 1 || Core_Health == 1)
    //                                {
    //                                    Received_Core_service = 1;
    //                                }
    //                                worksheet.Range["EW" + row].Number = Received_Core_service;

    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["FA" + row].Number = 0;
    //                                worksheet.Range["FB" + row].Number = 0;
    //                                worksheet.Range["FC" + row].Number = 0;
    //                                worksheet.Range["W" + row].Number = 0;
    //                                worksheet.Range["BL" + row].Number = 0;

    //                                worksheet.Range["BM" + row].Number =0;

    //                                worksheet.Range["BN" + row].Number = 0;

    //                                worksheet.Range["W" + row].Number = 0;
    //                                worksheet.Range["BL" + row].Number = 0;
    //                                worksheet.Range["BM" + row].Number = 0;
    //                                worksheet.Range["BN" + row].Number = 0;

    //                                worksheet.Range["BS" + row].Number = 0;

    //                                worksheet.Range["BT" + row].Number = 0;

    //                                worksheet.Range["BU" + row].Number = 0;

    //                                worksheet.Range["BV" + row].Number = 0;

    //                                worksheet.Range["BW" + row].Number = 0;

    //                                worksheet.Range["BX" + row].Number = 0;
    //                                worksheet.Range["BY" + row].Number = 0;

    //                                int Core_Economic_Stability = 0;

    //                                worksheet.Range["BZ" + row].Number = Core_Economic_Stability;

    //                                worksheet.Range["CA" + row].Number = 0;

    //                                worksheet.Range["CB" + row].Number = 0;
    //                                worksheet.Range["CC" + row].Number =0;

    //                                worksheet.Range["CD" + row].Number = 0;

    //                                worksheet.Range["CE" + row].Number = 0;

    //                                worksheet.Range["CF" + row].Number = 0;
    //                                worksheet.Range["CG" + row].Number = 0;

    //                                worksheet.Range["CH" + row].Number = 0;

    //                                worksheet.Range["CI" + row].Number = 0;

    //                                int Core_Education = 0;
    //                                worksheet.Range["CJ" + row].Number = Core_Education;

    //                                worksheet.Range["CK" + row].Number = 0;

    //                                worksheet.Range["CL" + row].Number = 0;

    //                                worksheet.Range["CM" + row].Number = 0;

    //                                worksheet.Range["CN" + row].Number = 0;

    //                                worksheet.Range["CO" + row].Number = 0;

    //                                worksheet.Range["CP" + row].Number = 0;
    //                                worksheet.Range["CQ" + row].Number = 0;

    //                                int Core_PSS = 0;
    //                                worksheet.Range["CR" + row].Number = Core_PSS;

    //                                worksheet.Range["CS" + row].Number = 0;

    //                                worksheet.Range["CT" + row].Number = 0;

    //                                worksheet.Range["CU" + row].Number = 0;

    //                                worksheet.Range["CV" + row].Number = 0;

    //                                worksheet.Range["CW" + row].Number = 0;

    //                                worksheet.Range["CX" + row].Number = 0;

    //                                worksheet.Range["CY" + row].Number = 0;

    //                                worksheet.Range["CZ" + row].Number = 0;
    //                                worksheet.Range["DA" + row].Number = 0;
    //                                int Core_Protection = 0;
    //                                worksheet.Range["DB" + row].Number = Core_Protection;

    //                                worksheet.Range["DC" + row].Number = 0;
    //                                worksheet.Range["DD" + row].Number = 0;
    //                                worksheet.Range["DE" + row].Number = 0;
    //                                worksheet.Range["DF" + row].Number = 0;
    //                                worksheet.Range["DG" + row].Number = 0;
    //                                worksheet.Range["DH" + row].Number = 0;
    //                                worksheet.Range["DI" + row].Number = 0;
    //                                worksheet.Range["DJ" + row].Number = 0;
    //                                worksheet.Range["DK" + row].Number = 0;
    //                                worksheet.Range["DL" + row].Number = 0;
    //                                worksheet.Range["DM" + row].Number = 0;
    //                                int Core_Food_Security_Nutrition = 0;
    //                                worksheet.Range["DN" + row].Number = Core_Food_Security_Nutrition;
    //                                worksheet.Range["DO" + row].Number = 0;

    //                                worksheet.Range["DP" + row].Number = 0;

    //                                worksheet.Range["DQ" + row].Number = 0;

    //                                worksheet.Range["DR" + row].Number = 0;

    //                                worksheet.Range["DS" + row].Number = 0;

    //                                worksheet.Range["DT" + row].Number = 0;

    //                                worksheet.Range["DU" + row].Number = 0;

    //                                worksheet.Range["DV" + row].Number = 0;

    //                                worksheet.Range["DW" + row].Number = 0;

    //                                worksheet.Range["DX" + row].Number = 0;

    //                                worksheet.Range["DY" + row].Number = 0;

    //                                worksheet.Range["DZ" + row].Number = 0;

    //                                worksheet.Range["EA" + row].Number = 0;

    //                                worksheet.Range["EB" + row].Number =0;

    //                                worksheet.Range["EC" + row].Number = 0;

    //                                worksheet.Range["ED" + row].Number = 0;

    //                                worksheet.Range["EE" + row].Number = 0;

    //                                worksheet.Range["EF" + row].Number = 0;

    //                                worksheet.Range["EG" + row].Number = 0;

    //                                worksheet.Range["EH" + row].Number = 0;

    //                                worksheet.Range["EI" + row].Number = 0;

    //                                worksheet.Range["EJ" + row].Number =0;

    //                                worksheet.Range["EK" + row].Number = 0;

    //                                worksheet.Range["EL" + row].Number = 0;

    //                                worksheet.Range["EM" + row].Number = 0;

    //                                worksheet.Range["EN" + row].Number = 0;

    //                                worksheet.Range["EO" + row].Number = 0;

    //                                worksheet.Range["EP" + row].Number = 0;

    //                                worksheet.Range["EQ" + row].Number = 0;

    //                                worksheet.Range["ER" + row].Number = 0;

    //                                worksheet.Range["ES" + row].Number = 0;

    //                                worksheet.Range["ET" + row].Number = 0;

    //                                worksheet.Range["EU" + row].Number = 0;

    //                                int Core_Health = 0;
    //                                worksheet.Range["EV" + row].Number = Core_Health;


    //                                int Received_Core_service = 0;
    //                                worksheet.Range["EW" + row].Number = Received_Core_service;
    //                            }



    //                            if(_ServicesProvided != null)
    //                            {
    //                                worksheet.Range["AC" + row].Text = _ServicesProvided.Service_Required_Stable;

    //                                worksheet.Range["AD" + row].Text = _ServicesProvided.Service_Required_School;

    //                                worksheet.Range["AE" + row].Text = _ServicesProvided.Service_Required_Safe;

    //                                worksheet.Range["AF" + row].Text = _ServicesProvided.Service_Required_Health;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AC" + row].Text = "N/A";

    //                                worksheet.Range["AD" + row].Text = "N/A";

    //                                worksheet.Range["AE" + row].Text = "N/A";

    //                                worksheet.Range["AF" + row].Text = "N/A";
    //                            }

    //                            var _ReferalForm = ReferalForm.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            if(_ReferalForm != null)
    //                            {
    //                                if(_ReferalForm.HIVStatusId != null)
    //                                {
    //                                    var a = HivStatus.FirstOrDefault(o => o.HivstatusId == _ReferalForm.HIVStatusId);
    //                                    worksheet.Range["AH" + row].Text = a.HivstatusDescription;
    //                                    worksheet.Range["AS" + row].Text = a.HivstatusDescription;
    //                                }
    //                                if (_ReferalForm.ServicePointArrivalDate.HasValue)
    //                                {
    //                                    worksheet.Range["AT" + row].Text = _ReferalForm.ServicePointArrivalDate.Value.ToString("dd/MM/yyyy");
    //                                }
    //                                if (_ReferalForm.Linked_to_ART.HasValue)
    //                                {
    //                                    worksheet.Range["AU" + row].Number = _ReferalForm.Linked_to_ART.Value;
    //                                }
    //                                if (_ReferalForm.OVC_UNK_REF.HasValue)
    //                                {
    //                                    worksheet.Range["FD" + row].Number = _ReferalForm.OVC_UNK_REF.Value;
    //                                }

    //                                if (_ReferalForm.OVC_REACH.HasValue)
    //                                {
    //                                    worksheet.Range["FE" + row].Number = _ReferalForm.OVC_REACH.Value;
    //                                }

    //                                if (_ReferalForm.OVC_AGREE_TST.HasValue)
    //                                {
    //                                    worksheet.Range["FF" + row].Number = _ReferalForm.OVC_AGREE_TST.Value;
    //                                }

    //                                if (_ReferalForm.OVC_TEST.HasValue)
    //                                {
    //                                    worksheet.Range["FG" + row].Number = _ReferalForm.OVC_TEST.Value;
    //                                }

    //                                if (_ReferalForm.Linked_to_HTS.HasValue)
    //                                {
    //                                    worksheet.Range["AQ" + row].Number = _ReferalForm.Linked_to_HTS.Value;
    //                                }
    //                                if (_ReferalForm.Tested_for_HIV.HasValue)
    //                                {
    //                                    worksheet.Range["AR" + row].Number = _ReferalForm.Tested_for_HIV.Value;
    //                                }
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AU" + row].Number = 0;
    //                                worksheet.Range["FD" + row].Number = 0;
    //                                worksheet.Range["FE" + row].Number = 0;
    //                                worksheet.Range["FF" + row].Number =0;
    //                                worksheet.Range["FG" + row].Number = 0;
    //                                worksheet.Range["AH" + row].Text = n.HIVStatusDescription;
    //                                worksheet.Range["AS" + row].Text = "N/A";
    //                                worksheet.Range["AQ" + row].Number = 0;
    //                                worksheet.Range["AR" + row].Number = 0;
    //                                worksheet.Range["AT" + row].Text = "N/A";
    //                            }

    //                            if (_ReferalForm != null && _ReferalForm.HIVStatusId==1)
    //                            {
    //                                worksheet.Range["AW" + row].Number = 1;
    //                                worksheet.Range["AV" + row].Number = 1;
    //                            }
    //                            else if (_TrackingFormExposedInfants != null)
    //                            {
    //                                worksheet.Range["AW" + row].Number = 1;
    //                                worksheet.Range["AV" + row].Number = 1;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AW" + row].Number = 0;
    //                                worksheet.Range["AV" + row].Number = 0;
    //                            }

    //                            if (_ReferalForm != null && _ReferalForm.HIVStatusId == 1 && _ReferalForm.IsOnArt==1)
    //                            {
    //                                worksheet.Range["AX" + row].Number = 1;
    //                            }
    //                            else if (_TrackingFormExposedInfants != null && _TrackingFormExposedInfants.IsEnrolledOnART==1)
    //                            {
    //                                worksheet.Range["AX" + row].Number = 1;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AX" + row].Number = 0;
    //                            }

    //                            var _schoolAttendence = schoolAttendence.FirstOrDefault(o=> o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            var _PreviousschoolAttendence= PreviousschoolAttendence.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            if (_schoolAttendence != null)
    //                            {
    //                                string Beneficiary_Classification = "N/A";
    //                                if(n.Age > 17 && n.Beneficiary_is_a_caregiver == 1)
    //                                {
    //                                    Beneficiary_Classification = "18+ Care Giver";
    //                                }
    //                                else if (n.Age < 18)
    //                                {
    //                                    Beneficiary_Classification = "Child";
    //                                }
    //                                else if (n.Age > 17 && n.Age <=20 && _schoolAttendence.OVC_is_enrolled_in_School == 1)
    //                                {
    //                                    Beneficiary_Classification = "18-20 Youth in school";
    //                                }
    //                                else if(n.Age > 17 && n.Age <= 20 && _PreviousschoolAttendence != null && _PreviousschoolAttendence.OVC_is_enrolled_in_School == 1)
    //                                {
    //                                    Beneficiary_Classification = "18-20 Youth in school";
    //                                }
    //                                else
    //                                {
    //                                    Beneficiary_Classification = "Other Adult";
    //                                }
    //                                worksheet.Range["Q" + row].Text = Beneficiary_Classification;

    //                                if (_schoolAttendence.OVC_is_enrolled_in_School.HasValue)
    //                                {
    //                                    worksheet.Range["X" + row].Number = _schoolAttendence.OVC_is_enrolled_in_School.Value;
    //                                }
    //                                else if (_PreviousschoolAttendence != null && _PreviousschoolAttendence.OVC_is_enrolled_in_School.HasValue)
    //                                {
    //                                    worksheet.Range["X" + row].Number = _PreviousschoolAttendence.OVC_is_enrolled_in_School.Value;
    //                                }

    //                                worksheet.Range["Y" + row].Text = _schoolAttendence.CurrentClassDesc;

    //                                worksheet.Range["Z" + row].Text = _schoolAttendence.CandidentClassCompletedDesc;

    //                                worksheet.Range["AA" + row].Text = _schoolAttendence.AttendencyDesc;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["X" + row].Number = 0;
    //                                worksheet.Range["Y" + row].Text = "N/A";

    //                                worksheet.Range["Z" + row].Text = "N/A";

    //                                worksheet.Range["AA" + row].Text = "N/A";
    //                                worksheet.Range["Q" + row].Text = "N/A";
    //                            }
    //                            var _TrackingForm = TrackingForm.FirstOrDefault(o => o.HouseHoldMemberId == n.HouseHoldMemberId);
    //                            if(_TrackingForm != null)
    //                            {
    //                                worksheet.Range["AY" + row].Text = _TrackingForm.OnARTDesc;

    //                                worksheet.Range["AZ" + row].Text = _TrackingForm.ARTNumber;

    //                                worksheet.Range["BA" + row].Text = _TrackingForm.FacilityName;

    //                                if (_TrackingForm.CohortNo.HasValue)
    //                                {
    //                                    worksheet.Range["BB" + row].Text = _TrackingForm.CohortNo.Value.ToString("dd/MM/yyyy");
    //                                }

    //                                if (_TrackingForm.LastViralloadTestDate.HasValue)
    //                                {
    //                                    worksheet.Range["BC" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["BC" + row].Number = 0;
    //                                }

    //                                if (_TrackingForm.TreatmentDuration.HasValue)
    //                                {
    //                                    worksheet.Range["BD" + row].Number = _TrackingForm.TreatmentDuration.Value;
    //                                }

    //                                worksheet.Range["BE" + row].Text = _TrackingForm.ClientCareModalityDesc;
    //                                worksheet.Range["BE" + row].ColumnWidth = 20;

    //                                worksheet.Range["BF" + row].Text = _TrackingForm.DrugDispensingModalityDesc;

    //                                worksheet.Range["BG" + row].Text = _TrackingForm.IsClientEligibleForViralloadDesc;

    //                                worksheet.Range["BH" + row].Text = _TrackingForm.ViralloadTestDoneDesc;

    //                                worksheet.Range["BI" + row].Text = _TrackingForm.ViralloadResultsReceivedDesc;

    //                                worksheet.Range["BJ" + row].Text = _TrackingForm.ViralloadTestResults;

    //                                worksheet.Range["BK" + row].Text = _TrackingForm.ViralLoadSuppressedDescription;

    //                                worksheet.Range["FH" + row].Text = _TrackingForm.IsClientEligibleForViralloadDesc;

    //                                worksheet.Range["FI" + row].Text = _TrackingForm.ViralloadTestResults;

    //                                worksheet.Range["FJ" + row].Text = _TrackingForm.ViralLoadSuppressedDescription;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AY" + row].Text = "N/A";

    //                                worksheet.Range["AZ" + row].Text = "N/A";

    //                                worksheet.Range["BA" + row].Text = "N/A";
    //                                worksheet.Range["BB" + row].Text = "N/A";
    //                                worksheet.Range["BC" + row].Number = 0;
    //                                worksheet.Range["BD" + row].Text = "N/A";
    //                                worksheet.Range["BE" + row].Text = "N/A";

    //                                worksheet.Range["BF" + row].Text = "N/A";

    //                                worksheet.Range["BG" + row].Text = "N/A";

    //                                worksheet.Range["BH" + row].Text = "N/A";

    //                                worksheet.Range["BI" + row].Text = "N/A";

    //                                worksheet.Range["BJ" + row].Text = "N/A";

    //                                worksheet.Range["BK" + row].Text = "N/A";

    //                                worksheet.Range["FH" + row].Text = "N/A";

    //                                worksheet.Range["FI" + row].Text = "N/A";

    //                                worksheet.Range["FJ" + row].Text = "N/A";
    //                            }

    //                            if(_assessment != null)
    //                            {
    //                                worksheet.Range["AI" + row].Number = _assessment.IsVirallaodTestDone;
    //                                if (_assessment.BeenCoughingForTwoWeek==1 || _assessment.ChildCoughingForTwoWeeks==1)
    //                                {
    //                                    worksheet.Range["AJ" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["AJ" + row].Number = 0;
    //                                }

    //                                if (n.Age > 18)
    //                                {
    //                                    worksheet.Range["AL" + row].Number = (_assessment.IsVirallaodTestDone + _assessment.ClientHadUnprotectedSexInPastThreeMonth + _assessment.ClientFallsInSexWorkersCategory + _assessment.ClientFallsInSexWorkersCategory +
    //                                    _assessment.ClientWithSexuallyTransmittedInfection + _assessment.ClientHasPresumptiveActiveTBDisease + _assessment.ClientHasNewHepatitisBDiagnosis
    //                                    + _assessment.ClientHasHistoryOfIllness + _assessment.ClientHasLossOfSexualPartnerHistory + _assessment.ClientIsMaleOrFemaleWithnoHIVTest);

    //                                    worksheet.Range["AM" + row].Number = (_assessment.BeenCoughingForTwoWeek + _assessment.PersistentFeverForTwoWeeks + _assessment.HaveYouLostWeight + _assessment.ExperiencedExcessiveNightSweats);
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["AL" + row].Number = (_assessment.IsVirallaodTestDone + _assessment.ChildAdmittedToHospitalInSixMonths + _assessment.ChildLivesWithHIVPositiveMotherOrFather + _assessment.ChildHIVSymptomatic +
    //                                    _assessment.ChildMalnourished + _assessment.ChildDignosedWithTuberculosis + _assessment.ChildHasSexualAbuseHistory
    //                                    + _assessment.ChildHasAccidentalExposure + _assessment.ChildDrugAbuseOrAlcohol);

    //                                    worksheet.Range["AM" + row].Number = (_assessment.ChildCoughingForTwoWeeks + _assessment.ChildHadPersistentFeverHstory + _assessment.ChildHasPoorWeightGain + _assessment.ChildHadContactWithActiveTBDiseaseAdult + _assessment.ChildExperiencedExcessiveNightSweeting);
    //                                }

    //                                var total = (_assessment.IsVirallaodTestDone + _assessment.ClientHadUnprotectedSexInPastThreeMonth + _assessment.ClientFallsInSexWorkersCategory + _assessment.ClientFallsInSexWorkersCategory +
    //                                    _assessment.ClientWithSexuallyTransmittedInfection + _assessment.ClientHasPresumptiveActiveTBDisease + _assessment.ClientHasNewHepatitisBDiagnosis
    //                                    + _assessment.ClientHasHistoryOfIllness + _assessment.ClientHasLossOfSexualPartnerHistory + _assessment.ClientIsMaleOrFemaleWithnoHIVTest) +
    //                                    _assessment.IsVirallaodTestDone + _assessment.ChildAdmittedToHospitalInSixMonths + _assessment.ChildLivesWithHIVPositiveMotherOrFather + _assessment.ChildHIVSymptomatic +
    //                                    _assessment.ChildMalnourished + _assessment.ChildDignosedWithTuberculosis + _assessment.ChildHasSexualAbuseHistory
    //                                    + _assessment.ChildHasAccidentalExposure + _assessment.ChildDrugAbuseOrAlcohol;

    //                                if (total >0 )
    //                                {
    //                                    worksheet.Range["AN" + row].Number = 0;
    //                                    worksheet.Range["AO" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["AN" + row].Number = 1;
    //                                    worksheet.Range["AO" + row].Number = 0;
    //                                }

    //                                int totalTBQuestions = (_assessment.BeenCoughingForTwoWeek + _assessment.PersistentFeverForTwoWeeks + _assessment.HaveYouLostWeight + _assessment.ExperiencedExcessiveNightSweats +
    //                                _assessment.ChildCoughingForTwoWeeks+ _assessment.ChildHadPersistentFeverHstory+ _assessment.ChildHasPoorWeightGain + _assessment.ChildHadContactWithActiveTBDiseaseAdult + _assessment.ChildExperiencedExcessiveNightSweeting);
    //                                if (totalTBQuestions > 0)
    //                                {
    //                                    worksheet.Range["AP" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["AP" + row].Number = 0;
    //                                }
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AI" + row].Number = 0;
    //                                worksheet.Range["AJ" + row].Number = 0;
    //                                worksheet.Range["AL" + row].Number = 0;
    //                                worksheet.Range["AM" + row].Number = 0;
    //                                worksheet.Range["AN" + row].Number = 0;
    //                                worksheet.Range["AO" + row].Number = 0;
    //                                worksheet.Range["AP" + row].Number = 0;
    //                            }

    //                            if (_assessment != null && _ReferalForm != null)
    //                            {
    //                                if(_ReferalForm.HIVStatusId==3 && _assessment.IsVirallaodTestDone == 1)
    //                                {
    //                                    worksheet.Range["AK" + row].Number = 1;
    //                                }
    //                                else if (_ReferalForm.HIVStatusId == 3 && _assessment.IsVirallaodTestDone == 1)
    //                                {
    //                                    worksheet.Range["AK" + row].Number = 0;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["AK" + row].Number = 0;
    //                                }
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["AK" + row].Number = 0;
    //                            }

    //                            if(_trackingtool != null)
    //                            {
    //                                double Cummulative_saving_to_date = 0;
    //                                double Amount_Borrowed = 0;
    //                                double OVC_FUND_Contribution_to_date = 0;
    //                                if (_trackingtool.SavedWf.HasValue)
    //                                {
    //                                    Cummulative_saving_to_date += _trackingtool.SavedWf.Value;
    //                                }
    //                                if (_trackingtool.SavedLf.HasValue)
    //                                {
    //                                    Cummulative_saving_to_date += _trackingtool.SavedLf.Value;
    //                                }
    //                                if (_trackingtool.SavedOf.HasValue)
    //                                {
    //                                    Cummulative_saving_to_date += _trackingtool.SavedOf.Value;
    //                                    OVC_FUND_Contribution_to_date += _trackingtool.SavedOf.Value;
    //                                }

    //                                if (_trackingtool.BorrowedWf.HasValue)
    //                                {
    //                                    Amount_Borrowed += _trackingtool.BorrowedWf.Value;
    //                                }
    //                                if (_trackingtool.BorrowedLf.HasValue)
    //                                {
    //                                    Amount_Borrowed += _trackingtool.BorrowedLf.Value;
    //                                }
    //                                worksheet.Range["BP" + row].Number = Cummulative_saving_to_date;
    //                                worksheet.Range["BQ" + row].Number = Amount_Borrowed;
    //                                worksheet.Range["BR" + row].Number = OVC_FUND_Contribution_to_date;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["BP" + row].Number = 0;
    //                                worksheet.Range["BQ" + row].Number = 0;
    //                                worksheet.Range["BR" + row].Number = 0;
    //                            }
    //                            if(_Vslagroupmembers != null)
    //                            {
    //                                worksheet.Range["BO" + row].Number = 1;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["BO" + row].Number = 0;
    //                            }
    //                            if (_GraduationCheclist.Count > 0)
    //                            {
    //                                var all_yes = _GraduationCheclist.Where(o => o.Response_YesNoId == 1).ToList().Count;
    //                                var all_NA = _GraduationCheclist.Where(o => o.Response_YesNoId == 3).ToList().Count;
    //                                if (all_yes==10 || all_NA == 10)
    //                                {
    //                                    worksheet.Range["EY" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["EY" + row].Number = 0;
    //                                }
    //                                if(_HomeVisit != null && (all_yes == 10 || all_NA == 10))
    //                                {
    //                                    worksheet.Range["EZ" + row].Number = 1;
    //                                }
    //                                else if (_PreviousHomeVisit != null && (all_yes == 10 || all_NA == 10))
    //                                {
    //                                    worksheet.Range["EZ" + row].Number = 1;
    //                                }
    //                                else
    //                                {
    //                                    worksheet.Range["EZ" + row].Number = 0;
    //                                }
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["EY" + row].Number = 0;
    //                                worksheet.Range["EZ" + row].Number = 0;
    //                            }
    //                            if(_PreviousHomeVisit != null)
    //                            {
    //                                worksheet.Range["EX" + row].Number = 1;
    //                            }
    //                            else
    //                            {
    //                                worksheet.Range["EX" + row].Number = 0;
    //                            }

    //                            worksheet.Range["A" + row + ":FJ" + row].CellStyle = Style;

    //                            worksheet.Range["BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
    //                            worksheet.Range["EW" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);

    //                            row++;
    //                        }
    //                        MemoryStream ms = new MemoryStream();
    //                        // Save and close the document.
    //                        workbook.SaveAs(ms);
    //                        //Reset the memory stream position.
    //                        ms.Position = 0;
    //                        await JS.SaveAs("Service Layering Report.xlsx", ms.ToArray());
    //                        ms.Dispose();
    //                        workbook.Close();
    //                        //excelEngine.Dispose();
    //                        outComeResult = "Success:- The report was successfully downloaded.";
    //                    }
    //                }
    //                else
    //                {
    //                    outComeResult = "No Record:- There were no records found for this search";
    //                }
    //            }
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        await ToastObj.ShowAsync(new ToastModel { Title = "Error!", Content = ex.Message.ToString(), CssClass = "e-toast-danger", Icon = "e-error toast-icons" });
    //    }
    //    finally
    //    {
    //        await ReportSpinner.HideAsync();
    //    }
    //}

    private async Task SearchRecords()
    {
        try
        {
            await ReportSpinner.ShowAsync();
            outComeResult = null;
            string district = null;
            string Subcounty = null;
            string parish = null;
            string village = null;
            if (InputModel.DistrictId != null)
            {
                district = string.Join(",", InputModel.DistrictId);
            }
            if (InputModel.SubcountyId != null)
            {
                Subcounty = string.Join(",", InputModel.SubcountyId);
            }
            if (InputModel.ParishId != null)
            {
                parish = string.Join(",", InputModel.ParishId);
            }
            if (InputModel.VillageId != null)
            {
                village = string.Join(",", InputModel.VillageId);
            }
            //if(InputModel.QuarterId== null || InputModel.YearId== null)
            //{
            //    outComeResult = "Please select the reporting period and the financial year";
            //}
            if (InputModel.Startdate == null || InputModel.Enddate == null)
            {
                outComeResult = "Please select the reporting period (both start date & End date)";
            }
            else
            {
                DateTime? startdate = null;
                DateTime? enddate = null;
                //var quarter = QuarterData.FirstOrDefault(o => o.QuarterId == InputModel.QuarterId);
                //if(quarter != null)
                //{
                //    startdate = new DateTime(InputModel.YearId.Value, quarter.StartMonthId.Value, 1);
                //    if(quarter.EndMonthId < quarter.StartMonthId)
                //    {
                //        enddate = new DateTime((InputModel.YearId.Value+1), quarter.EndMonthId.Value, DateTime.DaysInMonth((InputModel.YearId.Value + 1), quarter.EndMonthId.Value));
                //    }
                //    else
                //    {
                //        enddate = new DateTime(InputModel.YearId.Value, quarter.EndMonthId.Value, DateTime.DaysInMonth(InputModel.YearId.Value, quarter.EndMonthId.Value));
                //    }
                //}
                var data = await spdb.spServiceLayeringReportGetAllAsync(district, Subcounty, parish, village, null, InputModel.Startdate, InputModel.Enddate);

                if (data.Count > 0)
                {
                    using (ExcelEngine excelEngine = new ExcelEngine())
                    {
                        IApplication application = excelEngine.Excel;
                        application.DefaultVersion = ExcelVersion.Excel2013;
                        IWorkbook workbook = application.Workbooks.Create(1);
                        IWorksheet worksheet = workbook.Worksheets[0];
                        worksheet.Name = "Service Layering Report";

                        #region Styles
                        var headerStyle = workbook.Styles.Add("headerStyle");

                        headerStyle.BeginUpdate();
                        headerStyle.Color = Syncfusion.Drawing.Color.Black; //Syncfusion.Drawing.Color.FromArgb(255, 0, 0);
                        headerStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        headerStyle.Font.Bold = true;
                        headerStyle.Font.FontName = "Arial";
                        headerStyle.Font.Size = 8f;
                        headerStyle.Font.Color = ExcelKnownColors.White;

                        headerStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        headerStyle.Borders.Color = ExcelKnownColors.White;
                        headerStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        headerStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        headerStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        //headerStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thick;

                        headerStyle.WrapText = true;

                        headerStyle.EndUpdate();

                        var Style = workbook.Styles.Add("bodyStyle");

                        Style.BeginUpdate();
                        Style.HorizontalAlignment = ExcelHAlign.HAlignLeft;
                        Style.VerticalAlignment = ExcelVAlign.VAlignTop;
                        Style.Font.Bold = false;
                        Style.Font.FontName = "Arial";
                        Style.Font.Size = 8f;
                        Style.Font.Color = ExcelKnownColors.Black;
                        Style.WrapText = true;
                        Style.Borders.Color = ExcelKnownColors.Black;
                        Style.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        Style.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        Style.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        Style.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        Style.EndUpdate();


                        var CategoryStyle = workbook.Styles.Add("CategoryStyle");

                        CategoryStyle.BeginUpdate();
                        CategoryStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        CategoryStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 195, 0);
                        /*CategoryStyle.Color = Syncfusion.Drawing.Color.FromArgb(105, 59, 88);*/ //AUBERGINE
                        CategoryStyle.Font.Bold = true;
                        CategoryStyle.Font.FontName = "Arial";
                        CategoryStyle.Font.Size = 10f;
                        CategoryStyle.Font.Color = ExcelKnownColors.White;
                        CategoryStyle.WrapText = true;
                        CategoryStyle.Borders.Color = ExcelKnownColors.White;
                        CategoryStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        CategoryStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        CategoryStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        CategoryStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        CategoryStyle.EndUpdate();

                        var CategoryTotalStyle = workbook.Styles.Add("CategoryTotalStyle");

                        CategoryTotalStyle.BeginUpdate();
                        CategoryTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        CategoryTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        CategoryTotalStyle.Color = Syncfusion.Drawing.Color.Black;
                        CategoryTotalStyle.Font.Bold = true;
                        CategoryTotalStyle.Font.FontName = "Arial";
                        CategoryTotalStyle.Font.Size = 8f;
                        CategoryTotalStyle.Font.Color = ExcelKnownColors.White;
                        CategoryTotalStyle.WrapText = true;
                        CategoryTotalStyle.Borders.Color = ExcelKnownColors.White;
                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        CategoryTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        CategoryTotalStyle.EndUpdate();

                        var DivisionStyle = workbook.Styles.Add("DivisionStyle");

                        DivisionStyle.BeginUpdate();
                        DivisionStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        DivisionStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 0, 0); //RED
                        DivisionStyle.Font.Bold = true;
                        DivisionStyle.Font.FontName = "Arial";
                        DivisionStyle.Font.Size = 8f;
                        DivisionStyle.Font.Color = ExcelKnownColors.White;
                        DivisionStyle.WrapText = true;
                        DivisionStyle.Borders.Color = ExcelKnownColors.White;
                        DivisionStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        DivisionStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        DivisionStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        DivisionStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        DivisionStyle.EndUpdate();

                        var DivisionTotalStyle = workbook.Styles.Add("DivisionTotalStyle");

                        DivisionTotalStyle.BeginUpdate();
                        DivisionTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        DivisionTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        DivisionTotalStyle.Color = Syncfusion.Drawing.Color.Black;
                        DivisionTotalStyle.Font.Bold = true;
                        DivisionTotalStyle.Font.FontName = "Arial";
                        DivisionTotalStyle.Font.Size = 8f;
                        DivisionTotalStyle.Font.Color = ExcelKnownColors.White;
                        DivisionTotalStyle.WrapText = true;
                        DivisionTotalStyle.Borders.Color = ExcelKnownColors.White;
                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        DivisionTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        DivisionTotalStyle.EndUpdate();


                        var TopicStyle = workbook.Styles.Add("TopicStyle");

                        TopicStyle.BeginUpdate();
                        TopicStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        TopicStyle.Color = Syncfusion.Drawing.Color.FromArgb(105, 59, 88); //AUBERGINE
                        TopicStyle.Font.Bold = true;
                        TopicStyle.Font.FontName = "Arial";
                        TopicStyle.Font.Size = 8f;
                        TopicStyle.Font.Color = ExcelKnownColors.White;
                        TopicStyle.WrapText = true;
                        TopicStyle.Borders.Color = ExcelKnownColors.White;
                        TopicStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        TopicStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        TopicStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        TopicStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        TopicStyle.EndUpdate();

                        var TopicTotalStyle = workbook.Styles.Add("TopicTotalStyle");

                        TopicTotalStyle.BeginUpdate();
                        TopicTotalStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        TopicTotalStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        TopicTotalStyle.Color = Syncfusion.Drawing.Color.Black;
                        TopicTotalStyle.Font.Bold = true;
                        TopicTotalStyle.Font.FontName = "Arial";
                        TopicTotalStyle.Font.Size = 8f;
                        TopicTotalStyle.Font.Color = ExcelKnownColors.White;
                        TopicTotalStyle.WrapText = true;
                        TopicTotalStyle.Borders.Color = ExcelKnownColors.White;
                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeLeft].LineStyle = ExcelLineStyle.Thin;
                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeRight].LineStyle = ExcelLineStyle.Thin;
                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeTop].LineStyle = ExcelLineStyle.Thin;
                        TopicTotalStyle.Borders[ExcelBordersIndex.EdgeBottom].LineStyle = ExcelLineStyle.Thin;
                        TopicTotalStyle.EndUpdate();
                        #endregion

                        int row = 1;
                        worksheet.Range["A" + row].Text = "Service Layering Report";
                        worksheet.Range["A" + row + ":M" + row].CellStyle = CategoryStyle;
                        worksheet.Range["A" + row + ":M" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["A" + row + ":M" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["A" + row].RowHeight = 30;
                        worksheet.Range["A" + row + ":M" + row].Merge();
                        row++;
                        row++;
                        #region Services
                        worksheet.Range["BL" + row].Text = "STABLE";
                        worksheet.Range["BL" + row + ":BZ" + row].Merge();
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(155, 194, 230);
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["BL" + row + ":BZ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

                        worksheet.Range["CA" + row].Text = "SCHOOL";
                        worksheet.Range["CA" + row + ":CJ" + row].Merge();
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 230, 153);
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["CA" + row + ":CJ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

                        worksheet.Range["CK" + row].Text = "PSS";
                        worksheet.Range["CK" + row + ":CR" + row].Merge();
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(122, 48, 160);
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["CK" + row + ":CR" + row].CellStyle.Font.Color = ExcelKnownColors.White;

                        worksheet.Range["CS" + row].Text = "Protection";
                        worksheet.Range["CS" + row + ":DB" + row].Merge();
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 255, 0);
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["CS" + row + ":DB" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

                        worksheet.Range["DC" + row].Text = "Food security and Nutrition";
                        worksheet.Range["DC" + row + ":DN" + row].Merge();
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(217, 217, 217);
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["DC" + row + ":DN" + row].CellStyle.Font.Color = ExcelKnownColors.Black;

                        worksheet.Range["DO" + row].Text = "HEALTH";
                        worksheet.Range["DO" + row + ":EV" + row].Merge();
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.HorizontalAlignment = ExcelHAlign.HAlignCenter;
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.VerticalAlignment = ExcelVAlign.VAlignCenter;
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(255, 192, 0);
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Size = 12f;
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Bold = true;
                        worksheet.Range["DO" + row + ":EV" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        #endregion end Services

                        row++;

                        #region Header row
                        worksheet.Range["A" + row].Text = "HH UiD";
                        worksheet.Range["A" + row].ColumnWidth = 20;

                        worksheet.Range["B" + row].Text = "Individual UiD";
                        worksheet.Range["B" + row].ColumnWidth = 20;

                        worksheet.Range["C" + row].Text = "Date of HVAT/ Enrollment";
                        worksheet.Range["C" + row].ColumnWidth = 20;

                        worksheet.Range["D" + row].Text = "Enrollement Quarter";
                        worksheet.Range["D" + row].ColumnWidth = 20;

                        worksheet.Range["E" + row].Text = "District";
                        worksheet.Range["E" + row].ColumnWidth = 20;

                        worksheet.Range["F" + row].Text = "Sub county";
                        worksheet.Range["F" + row].ColumnWidth = 20;

                        worksheet.Range["G" + row].Text = "Parish";
                        worksheet.Range["G" + row].ColumnWidth = 20;

                        worksheet.Range["H" + row].Text = "Village";
                        worksheet.Range["H" + row].ColumnWidth = 20;

                        worksheet.Range["I" + row].Text = "Name of HH Head";
                        worksheet.Range["I" + row].ColumnWidth = 20;

                        worksheet.Range["J" + row].Text = "Beneficiary is a caregiver";
                        worksheet.Range["J" + row].ColumnWidth = 20;

                        worksheet.Range["K" + row].Text = "Caregiver Coded";
                        worksheet.Range["K" + row].ColumnWidth = 20;

                        worksheet.Range["L" + row].Text = "Other Adult";
                        worksheet.Range["L" + row].ColumnWidth = 20;

                        worksheet.Range["M" + row].Text = "No. of Primary Caregivers in HH";
                        worksheet.Range["M" + row].ColumnWidth = 20;

                        worksheet.Range["N" + row].Text = "Beneficiary Name";
                        worksheet.Range["N" + row].ColumnWidth = 20;

                        worksheet.Range["O" + row].Text = "Date of birth";
                        worksheet.Range["O" + row].ColumnWidth = 20;

                        worksheet.Range["P" + row].Text = "Current Age";
                        worksheet.Range["P" + row].ColumnWidth = 20;

                        worksheet.Range["Q" + row].Text = "Beneficiary Classification";
                        worksheet.Range["Q" + row].ColumnWidth = 20;

                        worksheet.Range["R" + row].Text = "Special Age classification";
                        worksheet.Range["R" + row].ColumnWidth = 20;

                        worksheet.Range["S" + row].Text = "sex";
                        worksheet.Range["S" + row].ColumnWidth = 20;

                        worksheet.Range["T" + row].Text = "Age category of HH Beneficiary";
                        worksheet.Range["T" + row].ColumnWidth = 20;

                        worksheet.Range["U" + row].Text = "Known Risk Factor";
                        worksheet.Range["U" + row].ColumnWidth = 20;

                        worksheet.Range["V" + row].Text = "Program participation status Quarterly HVF";
                        worksheet.Range["V" + row].ColumnWidth = 20;

                        worksheet.Range["W" + row].Text = "HH Visited this Quarter";
                        worksheet.Range["W" + row].ColumnWidth = 20;

                        worksheet.Range["X" + row].Text = "OVC is enrolled in School?";
                        worksheet.Range["X" + row].ColumnWidth = 20;

                        worksheet.Range["Y" + row].Text = "Current Class";
                        worksheet.Range["Y" + row].ColumnWidth = 20;

                        worksheet.Range["Z" + row].Text = "Candidate Class Completed";
                        worksheet.Range["Z" + row].ColumnWidth = 20;

                        worksheet.Range["AA" + row].Text = "Attendance";
                        worksheet.Range["AA" + row].ColumnWidth = 20;

                        worksheet.Range["AB" + row].Text = "18-20 years in school or completing apprenticeship";
                        worksheet.Range["AB" + row].ColumnWidth = 20;

                        worksheet.Range["AC" + row].Text = "Service Required Stable";
                        worksheet.Range["AC" + row].ColumnWidth = 20;

                        worksheet.Range["AD" + row].Text = "Service Required School";
                        worksheet.Range["AD" + row].ColumnWidth = 20;

                        worksheet.Range["AE" + row].Text = "Service Required Safe";
                        worksheet.Range["AE" + row].ColumnWidth = 20;

                        worksheet.Range["AF" + row].Text = "Service Required Health";
                        worksheet.Range["AF" + row].ColumnWidth = 20;

                        worksheet.Range["AG" + row].Text = "HIV Status at Enrollment";
                        worksheet.Range["AG" + row].ColumnWidth = 20;

                        worksheet.Range["AH" + row].Text = "Current HIV Status";
                        worksheet.Range["AH" + row].ColumnWidth = 20;

                        worksheet.Range["AI" + row].Text = "HIV Risk Assessed";
                        worksheet.Range["AI" + row].ColumnWidth = 20;

                        worksheet.Range["AJ" + row].Text = "TB Risk Assessed";
                        worksheet.Range["AJ" + row].ColumnWidth = 20;

                        worksheet.Range["AK" + row].Text = "HIV Status Unknown and Risk Assessed";
                        worksheet.Range["AK" + row].ColumnWidth = 20;

                        worksheet.Range["AL" + row].Text = "Total HIV Risk Qns with Yes";
                        worksheet.Range["AL" + row].ColumnWidth = 20;

                        worksheet.Range["AM" + row].Text = "Total TB Risk Qns with Yes";
                        worksheet.Range["AM" + row].ColumnWidth = 20;

                        worksheet.Range["AN" + row].Text = "Not At Risk of HIV";
                        worksheet.Range["AN" + row].ColumnWidth = 20;

                        worksheet.Range["AO" + row].Text = "At Risk of HIV";
                        worksheet.Range["AO" + row].ColumnWidth = 20;

                        worksheet.Range["AP" + row].Text = "At Risk for TB";
                        worksheet.Range["AP" + row].ColumnWidth = 20;

                        worksheet.Range["AQ" + row].Text = "Linked_to_HTS";
                        worksheet.Range["AQ" + row].ColumnWidth = 20;

                        worksheet.Range["AR" + row].Text = "Tested_for_HIV";
                        worksheet.Range["AR" + row].ColumnWidth = 20;

                        worksheet.Range["AS" + row].Text = "HIV Test Results";
                        worksheet.Range["AS" + row].ColumnWidth = 20;

                        worksheet.Range["AT" + row].Text = "HIV Test Result Date";
                        worksheet.Range["AT" + row].ColumnWidth = 20;

                        worksheet.Range["AU" + row].Text = "Linked to ART";
                        worksheet.Range["AU" + row].ColumnWidth = 20;

                        worksheet.Range["AV" + row].Text = "Newly_Reported_ HIV_Postive";
                        worksheet.Range["AV" + row].ColumnWidth = 20;

                        worksheet.Range["AW" + row].Text = "Newly_Tested_HIV_Positive";
                        worksheet.Range["AW" + row].ColumnWidth = 20;

                        worksheet.Range["AX" + row].Text = "Newly_Tested_HIV_Positive_on_ART";
                        worksheet.Range["AX" + row].ColumnWidth = 20;

                        worksheet.Range["AY" + row].Text = "On_ART";
                        worksheet.Range["AY" + row].ColumnWidth = 20;

                        worksheet.Range["AZ" + row].Text = "ART_No.";
                        worksheet.Range["AZ" + row].ColumnWidth = 20;

                        worksheet.Range["BA" + row].Text = "Facility of Care_HIV-TB Risk Ass";
                        worksheet.Range["BA" + row].ColumnWidth = 20;

                        worksheet.Range["BB" + row].Text = "Client ART COHORT No.";
                        worksheet.Range["BB" + row].ColumnWidth = 20;

                        worksheet.Range["BC" + row].Text = "Client Tracked for VL";
                        worksheet.Range["BC" + row].ColumnWidth = 20;

                        worksheet.Range["BD" + row].Text = "Duration On Treatment (Months)";
                        worksheet.Range["BD" + row].ColumnWidth = 20;

                        worksheet.Range["BE" + row].Text = "Modality of Treatment";
                        worksheet.Range["BE" + row].ColumnWidth = 20;

                        worksheet.Range["BF" + row].Text = "Modality of Drug Dispensing";
                        worksheet.Range["BF" + row].ColumnWidth = 20;

                        worksheet.Range["BG" + row].Text = "Client Eligible for VL";
                        worksheet.Range["BG" + row].ColumnWidth = 20;

                        worksheet.Range["BH" + row].Text = "Viral Load Test Done";
                        worksheet.Range["BH" + row].ColumnWidth = 20;

                        worksheet.Range["BI" + row].Text = "Viral Load Test Results Received";
                        worksheet.Range["BI" + row].ColumnWidth = 20;

                        worksheet.Range["BJ" + row].Text = "Viral Load Test Copies/mls";
                        worksheet.Range["BJ" + row].ColumnWidth = 20;

                        worksheet.Range["BK" + row].Text = "Viral Load Test Results";
                        worksheet.Range["BK" + row].ColumnWidth = 20;

                        worksheet.Range["BL" + row].Text = "1a. Cash transfer (project)";
                        worksheet.Range["BL" + row].ColumnWidth = 20;

                        worksheet.Range["BM" + row].Text = "1b. Emergency cash support (VSLA+)";
                        worksheet.Range["BM" + row].ColumnWidth = 20;

                        worksheet.Range["BN" + row].Text = "1c. Access to Saving & Credit (VSLA)";
                        worksheet.Range["BN" + row].ColumnWidth = 20;

                        worksheet.Range["BO" + row].Text = "Member of a  VSLA";
                        worksheet.Range["BO" + row].ColumnWidth = 20;

                        worksheet.Range["BP" + row].Text = "Cummulative saving to date_to date";
                        worksheet.Range["BP" + row].ColumnWidth = 20;

                        worksheet.Range["BQ" + row].Text = "Amount Borrowed ";
                        worksheet.Range["BQ" + row].ColumnWidth = 20;

                        worksheet.Range["BR" + row].Text = "OVC_FUND Contribution_to date";
                        worksheet.Range["BR" + row].ColumnWidth = 20;

                        worksheet.Range["BS" + row].Text = "1d. Supported to own & run an IGA";
                        worksheet.Range["BS" + row].ColumnWidth = 20;

                        worksheet.Range["BT" + row].Text = "1e. Received IGA training & boost";
                        worksheet.Range["BT" + row].ColumnWidth = 20;

                        worksheet.Range["BU" + row].Text = "1f. Received business skills training (F.L & SPM)";
                        worksheet.Range["BU" + row].ColumnWidth = 20;

                        worksheet.Range["BV" + row].Text = "1g. Apprenticeship attachment";
                        worksheet.Range["BV" + row].ColumnWidth = 20;

                        worksheet.Range["BW" + row].Text = "1h. Received soft skill training (basket, briquette, jewelry, mats & brick making) ";
                        worksheet.Range["BW" + row].ColumnWidth = 20;

                        worksheet.Range["BX" + row].Text = "1i. Provided startup kit or capital";
                        worksheet.Range["BX" + row].ColumnWidth = 20;

                        worksheet.Range["BY" + row].Text = "1j. Referred to ES service";
                        worksheet.Range["BY" + row].ColumnWidth = 20;

                        worksheet.Range["BZ" + row].Text = "Core_Economic Stability(HomeVisits)";
                        worksheet.Range["BZ" + row].ColumnWidth = 20;

                        worksheet.Range["CA" + row].Text = "4a. Supported to enroll/ re-enroll in school";
                        worksheet.Range["CA" + row].ColumnWidth = 20;

                        worksheet.Range["CB" + row].Text = "4b. Monitored for regular attendance";
                        worksheet.Range["CB" + row].ColumnWidth = 20;

                        worksheet.Range["CC" + row].Text = "4c. Provided school fees bursary";
                        worksheet.Range["CC" + row].ColumnWidth = 20;

                        worksheet.Range["CD" + row].Text = "4d. Provided school meals";
                        worksheet.Range["CD" + row].ColumnWidth = 20;

                        worksheet.Range["CE" + row].Text = "4e. Provided with school uniform";
                        worksheet.Range["CE" + row].ColumnWidth = 20;

                        worksheet.Range["CF" + row].Text = "4f. Provided scholastic / reading materials";
                        worksheet.Range["CF" + row].ColumnWidth = 20;

                        worksheet.Range["CG" + row].Text = "4g. Provided vocational education";
                        worksheet.Range["CG" + row].ColumnWidth = 20;

                        worksheet.Range["CH" + row].Text = "4h. Caregiver received ECD training";
                        worksheet.Range["CH" + row].ColumnWidth = 20;

                        worksheet.Range["CI" + row].Text = "4i. Referred for E&D services";
                        worksheet.Range["CI" + row].ColumnWidth = 20;

                        worksheet.Range["CJ" + row].Text = "Core_Education(HomeVisits)";
                        worksheet.Range["CJ" + row].ColumnWidth = 20;

                        worksheet.Range["CK" + row].Text = "5a. Provided Counselling & Guidance";
                        worksheet.Range["CK" + row].ColumnWidth = 20;

                        worksheet.Range["CL" + row].Text = "5b. Supported to access basic need";
                        worksheet.Range["CL" + row].ColumnWidth = 20;

                        worksheet.Range["CM" + row].Text = "5c. Supported to access to recreation activities";
                        worksheet.Range["CM" + row].ColumnWidth = 20;

                        worksheet.Range["CN" + row].Text = "5d. Provided palliative care for HIV positive";
                        worksheet.Range["CN" + row].ColumnWidth = 20;

                        worksheet.Range["CO" + row].Text = "5e. Provided Post-violence trauma-informed counselling";
                        worksheet.Range["CO" + row].ColumnWidth = 20;

                        worksheet.Range["CP" + row].Text = "5f. Provided Clothing & Beddings";
                        worksheet.Range["CP" + row].ColumnWidth = 20;

                        worksheet.Range["CQ" + row].Text = "5g. Referred to access other PSS services";
                        worksheet.Range["CQ" + row].ColumnWidth = 20;

                        worksheet.Range["CR" + row].Text = "Core_PSS(HomeVisits)";
                        worksheet.Range["CR" + row].ColumnWidth = 20;

                        worksheet.Range["CS" + row].Text = "6a. Legal support for GBV victims";
                        worksheet.Range["CS" + row].ColumnWidth = 20;

                        worksheet.Range["CT" + row].Text = "6b. Provided Positive Parenting training";
                        worksheet.Range["CT" + row].ColumnWidth = 20;

                        worksheet.Range["CU" + row].Text = "6c. Supported to handle child neglect & abusive";
                        worksheet.Range["CU" + row].ColumnWidth = 20;

                        worksheet.Range["CV" + row].Text = "6d. Supported to register birth";
                        worksheet.Range["CV" + row].ColumnWidth = 20;

                        worksheet.Range["CW" + row].Text = "6e. Participated in community sensitization on CP";
                        worksheet.Range["CW" + row].ColumnWidth = 20;

                        worksheet.Range["CX" + row].Text = "6f. Supported to withdraw from child labour";
                        worksheet.Range["CX" + row].ColumnWidth = 20;

                        worksheet.Range["CY" + row].Text = "6g. Supported Child re-integration with Family";
                        worksheet.Range["CY" + row].ColumnWidth = 20;

                        worksheet.Range["CZ" + row].Text = "6h. Provided SBCC on violence prevention & reporting (GBV, SVAC).";
                        worksheet.Range["CZ" + row].ColumnWidth = 20;

                        worksheet.Range["DA" + row].Text = "6i. Referred to access other Protection services";
                        worksheet.Range["DA" + row].ColumnWidth = 20;

                        worksheet.Range["DB" + row].Text = "Core_Protection (Home Visits)";
                        worksheet.Range["DB" + row].ColumnWidth = 20;

                        worksheet.Range["DC" + row].Text = "2a. Nutrition Education & Counselling(HomeVisits)";
                        worksheet.Range["DC" + row].ColumnWidth = 20;

                        worksheet.Range["DD" + row].Text = "2b. Food Relief/ Supplement Assistance";
                        worksheet.Range["DD" + row].ColumnWidth = 20;

                        worksheet.Range["DE" + row].Text = "2c. Trained on good agronomic practices";
                        worksheet.Range["DE" + row].ColumnWidth = 20;

                        worksheet.Range["DF" + row].Text = "2d. Received Farming Inputs";
                        worksheet.Range["DF" + row].ColumnWidth = 20;

                        worksheet.Range["DG" + row].Text = "2e. Received Agric. Advisory Services";
                        worksheet.Range["DG" + row].ColumnWidth = 20;

                        worksheet.Range["DH" + row].Text = "2f. Supported to access output markets";
                        worksheet.Range["DH" + row].ColumnWidth = 20;

                        worksheet.Range["DI" + row].Text = "2g. Supported to access Post-Harvest handling";
                        worksheet.Range["DI" + row].ColumnWidth = 20;

                        worksheet.Range["DJ" + row].Text = "2h. Provided Nutrition Assessment (MUAC)";
                        worksheet.Range["DJ" + row].ColumnWidth = 20;

                        worksheet.Range["DK" + row].Text = "2i. Supported to setup Vegetable/ Backyard gardening ";
                        worksheet.Range["DK" + row].ColumnWidth = 20;

                        worksheet.Range["DL" + row].Text = "2j. Beneficiary supported to access Farmer field schools";
                        worksheet.Range["DL" + row].ColumnWidth = 20;

                        worksheet.Range["DM" + row].Text = "2k. Referred to access other FSN services";
                        worksheet.Range["DM" + row].ColumnWidth = 20;

                        worksheet.Range["DN" + row].Text = "Core_Food Security & Nutrition(HomeVisits)";
                        worksheet.Range["DN" + row].ColumnWidth = 20;

                        worksheet.Range["DO" + row].Text = "3a. Assisted to access safe water";
                        worksheet.Range["DO" + row].ColumnWidth = 20;

                        worksheet.Range["DP" + row].Text = "3b. Provided with stable shelter";
                        worksheet.Range["DP" + row].ColumnWidth = 20;

                        worksheet.Range["DQ" + row].Text = "3c. Supported to access a pit latrine";
                        worksheet.Range["DQ" + row].ColumnWidth = 20;

                        worksheet.Range["DR" + row].Text = "3d. Supported to maintain a standard hand washing facility";
                        worksheet.Range["DR" + row].ColumnWidth = 20;

                        worksheet.Range["DS" + row].Text = "3e. Provided/ supported to access ITNs";
                        worksheet.Range["DS" + row].ColumnWidth = 20;

                        worksheet.Range["DT" + row].Text = "3f. Provided SBCC on WASH";
                        worksheet.Range["DT" + row].ColumnWidth = 20;

                        worksheet.Range["DU" + row].Text = "3g. Supported to access immunization";
                        worksheet.Range["DU" + row].ColumnWidth = 20;

                        worksheet.Range["DV" + row].Text = "3h. Supported to access antenatal care";
                        worksheet.Range["DV" + row].ColumnWidth = 20;

                        worksheet.Range["DW" + row].Text = "3i. Supported to access youth friendly services";
                        worksheet.Range["DW" + row].ColumnWidth = 20;

                        worksheet.Range["DX" + row].Text = "3j. Provided SBCC on Malaria Prevention";
                        worksheet.Range["DX" + row].ColumnWidth = 20;

                        worksheet.Range["DY" + row].Text = "3k. Supported to access IPT for Pregnant Mothers";
                        worksheet.Range["DY" + row].ColumnWidth = 20;

                        worksheet.Range["DZ" + row].Text = "3l. HH supported to access IRS for Malaria Prevention";
                        worksheet.Range["DZ" + row].ColumnWidth = 20;

                        worksheet.Range["EA" + row].Text = "3m. Supported to access Family Planning services";
                        worksheet.Range["EA" + row].ColumnWidth = 20;

                        worksheet.Range["EB" + row].Text = "3n. Referred to access other family health services ";
                        worksheet.Range["EB" + row].ColumnWidth = 20;

                        worksheet.Range["EC" + row].Text = "7a. HIV risk assessment & HIV pre-test counselling";
                        worksheet.Range["EC" + row].ColumnWidth = 20;

                        worksheet.Range["ED" + row].Text = "7b. Supported to test for HIV and receive HIV results";
                        worksheet.Range["ED" + row].ColumnWidth = 20;

                        worksheet.Range["EE" + row].Text = "7c. Provided HIV post-test counseling ";
                        worksheet.Range["EE" + row].ColumnWidth = 20;

                        worksheet.Range["EF" + row].Text = "7d. Supported to disclose HIV status to family";
                        worksheet.Range["EF" + row].ColumnWidth = 20;

                        worksheet.Range["EG" + row].Text = "7e. Supported to enroll on ART";
                        worksheet.Range["EG" + row].ColumnWidth = 20;

                        worksheet.Range["EH" + row].Text = "7f. Supported to access ART refills";
                        worksheet.Range["EH" + row].ColumnWidth = 20;

                        worksheet.Range["EI" + row].Text = "7g. Provided  ART adherence support";
                        worksheet.Range["EI" + row].ColumnWidth = 20;

                        worksheet.Range["EJ" + row].Text = "7h. Supported to test for VL";
                        worksheet.Range["EJ" + row].ColumnWidth = 20;

                        worksheet.Range["EK" + row].Text = "7i. Supported to receive VL results";
                        worksheet.Range["EK" + row].ColumnWidth = 20;

                        worksheet.Range["EL" + row].Text = "7j. Provided IAC for Non-Suppression";
                        worksheet.Range["EL" + row].ColumnWidth = 20;

                        worksheet.Range["EM" + row].Text = "7k. Referred for HIV TCT Services";
                        worksheet.Range["EM" + row].ColumnWidth = 20;

                        worksheet.Range["EN" + row].Text = "8a. Provided eMTCT services";
                        worksheet.Range["EN" + row].ColumnWidth = 20;

                        worksheet.Range["EO" + row].Text = "8b. Supported to access PrEP";
                        worksheet.Range["EO" + row].ColumnWidth = 20;

                        worksheet.Range["EP" + row].Text = "8c. Provided condoms";
                        worksheet.Range["EP" + row].ColumnWidth = 20;

                        worksheet.Range["EQ" + row].Text = "8d. Supported to access VMMC/ SMC";
                        worksheet.Range["EQ" + row].ColumnWidth = 20;

                        worksheet.Range["ER" + row].Text = "8e. Provided SBCC on HIV prevention & education";
                        worksheet.Range["ER" + row].ColumnWidth = 20;

                        worksheet.Range["ES" + row].Text = "8f. Supported to access PEP";
                        worksheet.Range["ES" + row].ColumnWidth = 20;

                        worksheet.Range["ET" + row].Text = "8g. Provided with Self-Awareness Knowledge on HIV prevention";
                        worksheet.Range["ET" + row].ColumnWidth = 20;

                        worksheet.Range["EU" + row].Text = "8h. Referred to access other HIV prevention services";
                        worksheet.Range["EU" + row].ColumnWidth = 20;

                        worksheet.Range["EV" + row].Text = "Core_Health(HomeVisits)";
                        worksheet.Range["EV" + row].ColumnWidth = 20;

                        worksheet.Range["EW" + row].Text = "Current Reporting Quarter Layering";
                        worksheet.Range["EW" + row].ColumnWidth = 20;

                        worksheet.Range["EX" + row].Text = "Served in Previous Quarter";
                        worksheet.Range["EX" + row].ColumnWidth = 20;

                        worksheet.Range["EY" + row].Text = "Graduated QTR1";
                        worksheet.Range["EY" + row].ColumnWidth = 20;
                        worksheet.Range["EZ" + row].Text = "Graduated QTR2";
                        worksheet.Range["EZ" + row].ColumnWidth = 20;
                        worksheet.Range["FA" + row].Text = "Graduated QTR3";
                        worksheet.Range["FA" + row].ColumnWidth = 20;
                        worksheet.Range["FB" + row].Text = "Graduated QTR4";
                        worksheet.Range["FB" + row].ColumnWidth = 20;

                        worksheet.Range["FC" + row].Text = "Graduated Final";
                        worksheet.Range["FC" + row].ColumnWidth = 20;

                        worksheet.Range["FD" + row].Text = "OVC_SERV_Final";
                        worksheet.Range["FD" + row].ColumnWidth = 20;

                        worksheet.Range["FE" + row].Text = "Exited Without Graduation";
                        worksheet.Range["FE" + row].ColumnWidth = 20;

                        worksheet.Range["FF" + row].Text = "Inactive (Died, Relocated, LTFU)";
                        worksheet.Range["FF" + row].ColumnWidth = 20;

                        worksheet.Range["FG" + row].Text = "Transferred out to PEPFAR IP";
                        worksheet.Range["FG" + row].ColumnWidth = 20;

                        worksheet.Range["FH" + row].Text = "Transferred out to Non-PEPFAR IP/ Government";
                        worksheet.Range["FH" + row].ColumnWidth = 20;

                        worksheet.Range["FI" + row].Text = "OVC UNK REF";
                        worksheet.Range["FI" + row].ColumnWidth = 20;

                        worksheet.Range["FJ" + row].Text = "OVC REACH";
                        worksheet.Range["FJ" + row].ColumnWidth = 20;

                        worksheet.Range["FK" + row].Text = "OVC AGREE TST";
                        worksheet.Range["FK" + row].ColumnWidth = 20;

                        worksheet.Range["FL" + row].Text = "OVC TEST";
                        worksheet.Range["FL" + row].ColumnWidth = 20;

                        worksheet.Range["FM" + row].Text = "OVC VL ELIGIBLE";
                        worksheet.Range["FM" + row].ColumnWidth = 20;

                        worksheet.Range["FN" + row].Text = "OVC VLR";
                        worksheet.Range["FN" + row].ColumnWidth = 20;

                        worksheet.Range["FO" + row].Text = "OVC VLS";
                        worksheet.Range["FO" + row].ColumnWidth = 20;

                        worksheet.Range["FP" + row].Text = "Total Number of Journey's sessions covered";
                        worksheet.Range["FP" + row].ColumnWidth = 20;

                        worksheet.Range["FQ" + row].Text = "Completion %age of Journey's plus";
                        worksheet.Range["FQ" + row].ColumnWidth = 20;

                        worksheet.Range["FR" + row].Text = "Total Number of Sinovuyo sessions covered";
                        worksheet.Range["FR" + row].ColumnWidth = 20;

                        worksheet.Range["FS" + row].Text = "Completion %age of Sinovuyo";
                        worksheet.Range["FS" + row].ColumnWidth = 20;

                        worksheet.Range["FT" + row].Text = "Total Number of ECD sessions covered";
                        worksheet.Range["FT" + row].ColumnWidth = 20;

                        worksheet.Range["FU" + row].Text = "Completion %age of ECD sessions";
                        worksheet.Range["FU" + row].ColumnWidth = 20;

                        worksheet.Range["A" + row + ":FU" + row].CellStyle = headerStyle;

                        worksheet.Range["BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["BZ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["CJ" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["CR" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["DB" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["DN" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["EV" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["EW" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["EW" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        worksheet.Range["EX" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                        worksheet.Range["EX" + row].CellStyle.Font.Color = ExcelKnownColors.Black;
                        #endregion Header row

                        row++;
                        foreach (var n in data)
                        {
                            worksheet.Range["A" + row].Text = n.HouseHoldCode;
                            worksheet.Range["A" + row].ColumnWidth = 20;

                            worksheet.Range["B" + row].Text = n.HouseHoldMemberCode;
                            worksheet.Range["B" + row].ColumnWidth = 20;

                            if (n.EnrollmentDate.HasValue)
                            {
                                worksheet.Range["C" + row].Text = n.EnrollmentDate.Value.ToString("dd/MM/yyyy");
                                worksheet.Range["C" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["D" + row].Text = n.Enrollement_Quarter;
                            worksheet.Range["D" + row].ColumnWidth = 20;

                            worksheet.Range["E" + row].Text = n.DistrictDescription;
                            worksheet.Range["E" + row].ColumnWidth = 20;

                            worksheet.Range["F" + row].Text = n.SubcountyDescription;
                            worksheet.Range["F" + row].ColumnWidth = 20;

                            worksheet.Range["G" + row].Text = n.ParishDescription;
                            worksheet.Range["G" + row].ColumnWidth = 20;

                            worksheet.Range["H" + row].Text = n.VillageDescription;
                            worksheet.Range["H" + row].ColumnWidth = 20;

                            worksheet.Range["I" + row].Text = n.HHName;
                            worksheet.Range["I" + row].ColumnWidth = 20;

                            worksheet.Range["J" + row].Number = n.Beneficiary_is_a_caregiver;
                            worksheet.Range["J" + row].ColumnWidth = 20;

                            worksheet.Range["K" + row].Text = n.Caregiver_CodedDesc;
                            worksheet.Range["K" + row].ColumnWidth = 20;

                            worksheet.Range["L" + row].Number = n.Other_Adult;
                            worksheet.Range["L" + row].ColumnWidth = 20;

                            if (n.No_of_Primary_Caregivers_in_HH.HasValue)
                            {
                                worksheet.Range["M" + row].Number = n.No_of_Primary_Caregivers_in_HH.Value;
                            }
                            worksheet.Range["M" + row].ColumnWidth = 20;

                            worksheet.Range["N" + row].Text = n.HouseHoldMemberName;
                            worksheet.Range["N" + row].ColumnWidth = 20;

                            if (n.DoB.HasValue)
                            {
                                worksheet.Range["O" + row].Text = n.DoB.Value.ToString("dd/MM/yyyy");
                                worksheet.Range["O" + row].ColumnWidth = 20;
                            }

                            if (n.Current_Age.HasValue)
                            {
                                worksheet.Range["P" + row].Number = n.Current_Age.Value;
                                worksheet.Range["P" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["Q" + row].Text = n.Beneficiary_Classification;
                            worksheet.Range["Q" + row].ColumnWidth = 20;

                            worksheet.Range["R" + row].Text = n.SpecialAgeClassification;
                            worksheet.Range["R" + row].ColumnWidth = 20;

                            worksheet.Range["S" + row].Text = n.GenderDescription;
                            worksheet.Range["S" + row].ColumnWidth = 20;

                            worksheet.Range["T" + row].Text = n.AgeCategoryHHBeneficiary;
                            worksheet.Range["T" + row].ColumnWidth = 20;

                            worksheet.Range["U" + row].Text = n.KnownRiskFactorDescription;
                            worksheet.Range["U" + row].ColumnWidth = 20;

                            worksheet.Range["V" + row].Text = n.ProgramParticipationDescription;
                            worksheet.Range["V" + row].ColumnWidth = 20;

                            worksheet.Range["W" + row].Number = n.HH_Visited_this_Quarter;
                            worksheet.Range["W" + row].ColumnWidth = 20;

                            worksheet.Range["X" + row].Number = n.OVC_is_enrolled_in_School;
                            worksheet.Range["X" + row].ColumnWidth = 20;

                            worksheet.Range["Y" + row].Text = n.CurrentClassDesc;
                            worksheet.Range["Y" + row].ColumnWidth = 20;

                            worksheet.Range["Z" + row].Text = n.CandidentClassCompletedDesc;
                            worksheet.Range["Z" + row].ColumnWidth = 20;

                            worksheet.Range["AA" + row].Text = n.AttendencyDesc;
                            worksheet.Range["AA" + row].ColumnWidth = 20;

                            worksheet.Range["AB" + row].Text = n.schoolcompletingapprenticeshipDesc;
                            worksheet.Range["AB" + row].ColumnWidth = 20;

                            worksheet.Range["AC" + row].Text = n.Service_Required_Stable;
                            worksheet.Range["AC" + row].ColumnWidth = 20;

                            worksheet.Range["AD" + row].Text = n.Service_Required_School;
                            worksheet.Range["AD" + row].ColumnWidth = 20;

                            worksheet.Range["AE" + row].Text = n.Service_Required_Safe;
                            worksheet.Range["AE" + row].ColumnWidth = 20;

                            worksheet.Range["AF" + row].Text = n.Service_Required_Health;
                            worksheet.Range["AF" + row].ColumnWidth = 20;

                            worksheet.Range["AG" + row].Text = n.HIV_Status_at_Enrollment;
                            worksheet.Range["AG" + row].ColumnWidth = 20;

                            worksheet.Range["AH" + row].Text = n.Current_HIV_Status;
                            worksheet.Range["AH" + row].ColumnWidth = 20;

                            worksheet.Range["AI" + row].Text = n.HIV_Risk_Assessed;
                            worksheet.Range["AI" + row].ColumnWidth = 20;

                            worksheet.Range["AJ" + row].Text = n.TB_Risk_Assessed;
                            worksheet.Range["AJ" + row].ColumnWidth = 20;

                            worksheet.Range["AK" + row].Text = n.HIV_Status_Unknown_and_Risk_Assessed;
                            worksheet.Range["AK" + row].ColumnWidth = 20;

                            if (n.Total_HIV_Risk_Qns_with_Yes.HasValue)
                            {
                                worksheet.Range["AL" + row].Number = n.Total_HIV_Risk_Qns_with_Yes.Value;
                                worksheet.Range["AL" + row].ColumnWidth = 20;
                            }

                            if (n.Total_TB_Risk_Qns_with_Yes.HasValue)
                            {
                                worksheet.Range["AM" + row].Number = n.Total_TB_Risk_Qns_with_Yes.Value;
                                worksheet.Range["AM" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["AN" + row].Number = n.NotAtRiskofHIV;
                            worksheet.Range["AN" + row].ColumnWidth = 20;

                            worksheet.Range["AO" + row].Number = n.AtRiskofHIV;
                            worksheet.Range["AO" + row].ColumnWidth = 20;

                            worksheet.Range["AP" + row].Number = n.At_Risk_for_TB;
                            worksheet.Range["AP" + row].ColumnWidth = 20;

                            if (n.Linked_to_HTS.HasValue)
                            {
                                worksheet.Range["AQ" + row].Number = n.Linked_to_HTS.Value;
                                worksheet.Range["AQ" + row].ColumnWidth = 20;
                            }

                            if (n.Tested_for_HIV.HasValue)
                            {
                                worksheet.Range["AR" + row].Number = n.Tested_for_HIV.Value;
                                worksheet.Range["AR" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["AS" + row].Text = n.HIV_Test_Results;
                            worksheet.Range["AS" + row].ColumnWidth = 20;

                            if (n.HIV_Test_Result_Date.HasValue)
                            {
                                worksheet.Range["AT" + row].Text = n.HIV_Test_Result_Date.Value.ToString("dd/MM/yyyy");
                                worksheet.Range["AT" + row].ColumnWidth = 20;
                            }

                            if (n.Linked_to_ART.HasValue)
                            {
                                worksheet.Range["AU" + row].Number = n.Linked_to_ART.Value;
                                worksheet.Range["AU" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["AV" + row].Number = n.Newly_Reported_HIV_Postive;
                            worksheet.Range["AV" + row].ColumnWidth = 20;

                            worksheet.Range["AW" + row].Number = n.Newly_Reported_HIV_Postive;
                            worksheet.Range["AW" + row].ColumnWidth = 20;

                            worksheet.Range["AX" + row].Number = n.Newly_Tested_HIV_Positive_on_ART;
                            worksheet.Range["AX" + row].ColumnWidth = 20;

                            worksheet.Range["AY" + row].Text = n.OnARTDesc;
                            worksheet.Range["AY" + row].ColumnWidth = 20;

                            worksheet.Range["AZ" + row].Text = n.ARTNumber;
                            worksheet.Range["AZ" + row].ColumnWidth = 20;

                            worksheet.Range["BA" + row].Text = n.FacilityName;
                            worksheet.Range["BA" + row].ColumnWidth = 20;

                            if (n.CohortNo.HasValue)
                            {
                                worksheet.Range["BB" + row].Text = n.CohortNo.Value.ToString("dd/MM/yyyy");
                                worksheet.Range["BB" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["BC" + row].Number = n.Client_Tracked_for_VL;
                            worksheet.Range["BC" + row].ColumnWidth = 20;

                            if (n.TreatmentDuration.HasValue)
                            {
                                worksheet.Range["BD" + row].Number = n.TreatmentDuration.Value;
                                worksheet.Range["BD" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["BE" + row].Text = n.ClientCareModalityDesc;
                            worksheet.Range["BE" + row].ColumnWidth = 20;

                            worksheet.Range["BF" + row].Text = n.DrugDispensingModalityDesc;
                            worksheet.Range["BF" + row].ColumnWidth = 20;

                            worksheet.Range["BG" + row].Text = n.IsClientEligibleForViralloadDesc;
                            worksheet.Range["BG" + row].ColumnWidth = 20;

                            worksheet.Range["BH" + row].Text = n.ViralloadTestDoneDesc;
                            worksheet.Range["BH" + row].ColumnWidth = 20;

                            worksheet.Range["BI" + row].Text = n.ViralloadResultsReceivedDesc;
                            worksheet.Range["BI" + row].ColumnWidth = 20;

                            worksheet.Range["BJ" + row].Text = n.ViralloadTestResults;

                            worksheet.Range["BK" + row].Text = n.ViralLoadSuppressedDescription;
                            worksheet.Range["BK" + row].ColumnWidth = 20;

                            worksheet.Range["BL" + row].Number = n.Cash_transfer;
                            worksheet.Range["BL" + row].ColumnWidth = 20;

                            worksheet.Range["BM" + row].Number = n.Emergency_cash_support;
                            worksheet.Range["BM" + row].ColumnWidth = 20;

                            worksheet.Range["BN" + row].Number = n.Access_to_Saving_Credit;
                            worksheet.Range["BN" + row].ColumnWidth = 20;

                            worksheet.Range["BO" + row].Number = n.Member_of_VSLA;
                            worksheet.Range["BO" + row].ColumnWidth = 20;

                            if (n.Cummulative_saving_to_date.HasValue)
                            {
                                worksheet.Range["BP" + row].Number = n.Cummulative_saving_to_date.Value;
                                worksheet.Range["BP" + row].ColumnWidth = 20;
                            }

                            if (n.Amount_Borrowed.HasValue)
                            {
                                worksheet.Range["BQ" + row].Number = n.Amount_Borrowed.Value;
                            }
                            worksheet.Range["BQ" + row].ColumnWidth = 20;

                            if (n.OVC_FUND_Contribution_to_date.HasValue)
                            {
                                worksheet.Range["BR" + row].Number = n.OVC_FUND_Contribution_to_date.Value;
                            }
                            worksheet.Range["BR" + row].ColumnWidth = 20;

                            worksheet.Range["BS" + row].Number = n.Supported_to_own_run;
                            worksheet.Range["BS" + row].ColumnWidth = 20;

                            worksheet.Range["BT" + row].Number = n.Received_IGA_training_boost;
                            worksheet.Range["BT" + row].ColumnWidth = 20;

                            worksheet.Range["BU" + row].Number = n.Received_business_skills_training;
                            worksheet.Range["BU" + row].ColumnWidth = 20;

                            worksheet.Range["BV" + row].Number = n.Apprenticeship_attachment;
                            worksheet.Range["BV" + row].ColumnWidth = 20;

                            worksheet.Range["BW" + row].Number = n.Received_soft_skill_training;
                            worksheet.Range["BW" + row].ColumnWidth = 20;

                            worksheet.Range["BX" + row].Number = n.Provided_startup_kit_or_capital;
                            worksheet.Range["BX" + row].ColumnWidth = 20;

                            worksheet.Range["BY" + row].Number = n.Referred_to_ES_service;
                            worksheet.Range["BY" + row].ColumnWidth = 20;

                            int Core_Economic_Stability = 0;
                            if (n.Cash_transfer == 1 || n.Emergency_cash_support == 1 || n.Access_to_Saving_Credit == 1 || n.Member_of_VSLA == 1 || n.Cummulative_saving_to_date > 0 || n.Amount_Borrowed > 0
                                || n.OVC_FUND_Contribution_to_date > 0 || n.Supported_to_own_run == 1 || n.Received_IGA_training_boost == 1 || n.Received_business_skills_training == 1 || n.Apprenticeship_attachment == 1 ||
                                n.Received_soft_skill_training == 1 || n.Provided_startup_kit_or_capital == 1 || n.Referred_to_ES_service == 1)
                            {
                                Core_Economic_Stability = 1;
                            }

                            worksheet.Range["BZ" + row].Number = Core_Economic_Stability;
                            worksheet.Range["BZ" + row].ColumnWidth = 20;

                            worksheet.Range["CA" + row].Number = n.Supported_to_enroll;
                            worksheet.Range["CA" + row].ColumnWidth = 20;

                            worksheet.Range["CB" + row].Number = n.Monitored_for_regular_attendance;
                            worksheet.Range["CB" + row].ColumnWidth = 20;

                            worksheet.Range["CC" + row].Number = n.Provided_school_fees_bursary;
                            worksheet.Range["CC" + row].ColumnWidth = 20;

                            worksheet.Range["CD" + row].Number = n.Provided_school_meals;
                            worksheet.Range["CD" + row].ColumnWidth = 20;

                            worksheet.Range["CE" + row].Number = n.Provided_with_school_uniform;
                            worksheet.Range["CE" + row].ColumnWidth = 20;

                            worksheet.Range["CF" + row].Number = n.Provided_scholastic;
                            worksheet.Range["CF" + row].ColumnWidth = 20;

                            worksheet.Range["CG" + row].Number = n.Provided_vocational_education;
                            worksheet.Range["CG" + row].ColumnWidth = 20;

                            worksheet.Range["CH" + row].Number = n.Caregiver_received_ECD_training;
                            worksheet.Range["CH" + row].ColumnWidth = 20;

                            worksheet.Range["CI" + row].Number = n.Referred_for_ED_services;
                            worksheet.Range["CI" + row].ColumnWidth = 20;

                            int Core_Education = 0;
                            if (n.Supported_to_enroll == 1 || n.Monitored_for_regular_attendance == 1 || n.Provided_school_fees_bursary == 1 || n.Provided_school_meals == 1 ||
                                n.Provided_with_school_uniform == 1 || n.Provided_scholastic == 1 || n.Provided_vocational_education == 1 || n.Caregiver_received_ECD_training == 1 || n.Referred_for_ED_services == 1)
                            {
                                Core_Education = 1;
                            }
                            worksheet.Range["CJ" + row].Number = Core_Education;
                            worksheet.Range["CJ" + row].ColumnWidth = 20;

                            worksheet.Range["CK" + row].Number = n.Provided_Counselling_Guidance;
                            worksheet.Range["CK" + row].ColumnWidth = 20;

                            worksheet.Range["CL" + row].Number = n.Supported_to_access_basic_needs;
                            worksheet.Range["CL" + row].ColumnWidth = 20;

                            worksheet.Range["CM" + row].Number = n.Supported_access_recreation_activities;
                            worksheet.Range["CM" + row].ColumnWidth = 20;

                            worksheet.Range["CN" + row].Number = n.Provided_palliative_care;
                            worksheet.Range["CN" + row].ColumnWidth = 20;

                            worksheet.Range["CO" + row].Number = n.Provided_Post_violence_trauma_informed;
                            worksheet.Range["CO" + row].ColumnWidth = 20;

                            worksheet.Range["CP" + row].Number = n.Provided_Clothing;
                            worksheet.Range["CP" + row].ColumnWidth = 20;

                            worksheet.Range["CQ" + row].Number = n.Referred_to_access_other_PSS_services;
                            worksheet.Range["CQ" + row].ColumnWidth = 20;

                            int Core_PSS = 0;
                            if (n.Provided_Counselling_Guidance == 1 || n.Supported_to_access_basic_needs == 1 || n.Supported_access_recreation_activities == 1 || n.Provided_palliative_care == 1 || n.Provided_Post_violence_trauma_informed == 1
                                || n.Provided_Clothing == 1 || n.Referred_to_access_other_PSS_services == 1)
                            {
                                Core_PSS = 1;
                            }
                            worksheet.Range["CR" + row].Number = Core_PSS;
                            worksheet.Range["CR" + row].ColumnWidth = 20;

                            worksheet.Range["CS" + row].Number = n.Legal_support_for_GBV;
                            worksheet.Range["CS" + row].ColumnWidth = 20;

                            worksheet.Range["CT" + row].Number = n.Provided_Positive_Parenting_training;
                            worksheet.Range["CT" + row].ColumnWidth = 20;

                            worksheet.Range["CU" + row].Number = n.Supported_handle_child_neglect_abusive;
                            worksheet.Range["CU" + row].ColumnWidth = 20;

                            worksheet.Range["CV" + row].Number = n.Supported_register_birth;
                            worksheet.Range["CV" + row].ColumnWidth = 20;

                            worksheet.Range["CW" + row].Number = n.Participated_community_sensitization_CP;
                            worksheet.Range["CW" + row].ColumnWidth = 20;

                            worksheet.Range["CX" + row].Number = n.Supported_withdraw_from_child_labour;
                            worksheet.Range["CX" + row].ColumnWidth = 20;

                            worksheet.Range["CY" + row].Number = n.Supported_Child_reintegration_with_Family;
                            worksheet.Range["CY" + row].ColumnWidth = 20;

                            worksheet.Range["CZ" + row].Number = n.Provided_SBCC_violence_prevention;
                            worksheet.Range["CZ" + row].ColumnWidth = 20;

                            worksheet.Range["DA" + row].Number = n.Referred_access_other_Protection_services;
                            worksheet.Range["DA" + row].ColumnWidth = 20;

                            int Core_Protection = 0;
                            if (n.Legal_support_for_GBV == 1 || n.Provided_Positive_Parenting_training == 1 || n.Supported_handle_child_neglect_abusive == 1 || n.Supported_register_birth == 1 ||
                                n.Participated_community_sensitization_CP == 1 || n.Supported_withdraw_from_child_labour == 1 || n.Supported_Child_reintegration_with_Family == 1 || n.Provided_SBCC_violence_prevention == 1 ||
                                n.Referred_access_other_Protection_services == 1)
                            {
                                Core_Protection = 1;
                            }
                            worksheet.Range["DB" + row].Number = Core_Protection;
                            worksheet.Range["DB" + row].ColumnWidth = 20;

                            worksheet.Range["DC" + row].Number = n.Nutrition_Education_Counselling;
                            worksheet.Range["DC" + row].ColumnWidth = 20;

                            worksheet.Range["DD" + row].Number = n.Food_Relief_Supplement_Assistance;
                            worksheet.Range["DD" + row].ColumnWidth = 20;

                            worksheet.Range["DE" + row].Number = n.Received_GAP_training;
                            worksheet.Range["DE" + row].ColumnWidth = 20;

                            worksheet.Range["DF" + row].Number = n.Received_Farming_Inputs;
                            worksheet.Range["DF" + row].ColumnWidth = 20;

                            worksheet.Range["DG" + row].Number = n.Received_Agric_Advisory_Services;
                            worksheet.Range["DG" + row].ColumnWidth = 20;

                            worksheet.Range["DH" + row].Number = n.Supported_access_output_markets;
                            worksheet.Range["DH" + row].ColumnWidth = 20;

                            worksheet.Range["DI" + row].Number = n.Supported_access_Post_Harvest_handling;
                            worksheet.Range["DI" + row].ColumnWidth = 20;

                            worksheet.Range["DJ" + row].Number = n.Provided_Nutrition_Assessment;
                            worksheet.Range["DJ" + row].ColumnWidth = 20;

                            worksheet.Range["DK" + row].Number = n.Supported_setup_Vegetable;
                            worksheet.Range["DK" + row].ColumnWidth = 20;

                            worksheet.Range["DL" + row].Number = n.supported_access_Farmer_field_schools;
                            worksheet.Range["DL" + row].ColumnWidth = 20;

                            worksheet.Range["DM" + row].Number = n.Referred_access_other_FSN_services;
                            worksheet.Range["DM" + row].ColumnWidth = 20;

                            int Core_Food_Security_Nutrition = 0;
                            if (n.Nutrition_Education_Counselling == 1 || n.Food_Relief_Supplement_Assistance == 1 || n.Received_GAP_training == 1 || n.Received_Farming_Inputs == 1
                                || n.Received_Agric_Advisory_Services == 1 || n.Supported_access_output_markets == 1 || n.Supported_access_Post_Harvest_handling == 1 || n.Provided_Nutrition_Assessment == 1
                                || n.Supported_setup_Vegetable == 1 || n.supported_access_Farmer_field_schools == 1 || n.Referred_access_other_FSN_services == 1)
                            {
                                Core_Food_Security_Nutrition = 1;
                            }
                            worksheet.Range["DN" + row].Number = Core_Food_Security_Nutrition;
                            worksheet.Range["DN" + row].ColumnWidth = 20;

                            // if (n.Assisted_access_safe_water.HasValue)
                            //{
                            worksheet.Range["DO" + row].Number = n.Assisted_access_safe_water;
                            worksheet.Range["DO" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_with_stable_shelter.HasValue)
                            //{
                            worksheet.Range["DP" + row].Number = n.Provided_with_stable_shelter;
                            worksheet.Range["DP" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_pit_latrine.HasValue)
                            //{
                            worksheet.Range["DQ" + row].Number = n.Supported_access_pit_latrine;
                            worksheet.Range["DQ" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_maintain_standard_Hand_washing_facility.HasValue)
                            //{
                            worksheet.Range["DR" + row].Number = n.Supported_maintain_standard_Hand_washing_facility;
                            worksheet.Range["DR" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_ITNs.HasValue)
                            //{
                            worksheet.Range["DS" + row].Number = n.Supported_access_ITNs;
                            worksheet.Range["DS" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_SBCC_on_WASH.HasValue)
                            //{
                            worksheet.Range["DT" + row].Number = n.Provided_SBCC_on_WASH;
                            worksheet.Range["DT" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_immunization.HasValue)
                            // {
                            worksheet.Range["DU" + row].Number = n.Supported_access_immunization;
                            worksheet.Range["DU" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_antenatal_care.HasValue)
                            //{
                            worksheet.Range["DV" + row].Number = n.Supported_access_antenatal_care;
                            worksheet.Range["DV" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_youth_friendly_services.HasValue)
                            //{
                            worksheet.Range["DW" + row].Number = n.Supported_access_youth_friendly_services;
                            worksheet.Range["DW" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_SBCC_Malaria_Prevention.HasValue)
                            //{
                            worksheet.Range["DX" + row].Number = n.Provided_SBCC_Malaria_Prevention;
                            worksheet.Range["DX" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_IPT_Referral_Pregnant_Mothers.HasValue)
                            //{
                            worksheet.Range["DY" + row].Number = n.Supported_access_IPT_Referral_Pregnant_Mothers;
                            worksheet.Range["DY" + row].ColumnWidth = 20;
                            //}

                            //if (n.supported_access_IRS_for_Malaria_Prevention.HasValue)
                            //{
                            worksheet.Range["DZ" + row].Number = n.supported_access_IRS_for_Malaria_Prevention;
                            worksheet.Range["DZ" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_Family_Planning_services.HasValue)
                            //{
                            worksheet.Range["EA" + row].Number = n.Supported_access_Family_Planning_services;
                            worksheet.Range["EA" + row].ColumnWidth = 20;
                            //}

                            //if (n.Referred_access_other_HWSS.HasValue)
                            //{
                            worksheet.Range["EB" + row].Number = n.Referred_access_other_HWSS;
                            worksheet.Range["EB" + row].ColumnWidth = 20;
                            //}

                            //if (n.HIV_risk_assessment_pre_test_counselling.HasValue)
                            //{
                            worksheet.Range["EC" + row].Number = n.HIV_risk_assessment_pre_test_counselling;
                            worksheet.Range["EC" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_test_HIV.HasValue)
                            //{
                            worksheet.Range["ED" + row].Number = n.Supported_test_HIV;
                            worksheet.Range["ED" + row].ColumnWidth = 20;
                            //}

                            //if (n.provided_HIV_post_test_counseling.HasValue)
                            //{
                            worksheet.Range["EE" + row].Number = n.provided_HIV_post_test_counseling;
                            worksheet.Range["EE" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_Disclose_HIV_status_Family.HasValue)
                            //{
                            worksheet.Range["EF" + row].Number = n.Supported_Disclose_HIV_status_Family;
                            worksheet.Range["EF" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_Enroll_ART.HasValue)
                            //{
                            worksheet.Range["EG" + row].Number = n.Supported_Enroll_ART;
                            worksheet.Range["EG" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_access_ART_refills.HasValue)
                            //{
                            worksheet.Range["EH" + row].Number = n.Supported_access_ART_refills;
                            worksheet.Range["EH" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_with_ART_adherence_support.HasValue)
                            //{
                            worksheet.Range["EI" + row].Number = n.Provided_with_ART_adherence_support;
                            worksheet.Range["EI" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_to_test_for_VL.HasValue)
                            //{
                            worksheet.Range["EJ" + row].Number = n.Supported_to_test_for_VL;
                            worksheet.Range["EJ" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_to_receive_VL_results.HasValue)
                            //{
                            worksheet.Range["EK" + row].Number = n.Supported_to_receive_VL_results;
                            worksheet.Range["EK" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_IAC_for_Non_Suppression.HasValue)
                            //{
                            worksheet.Range["EL" + row].Number = n.Provided_IAC_for_Non_Suppression;
                            worksheet.Range["EL" + row].ColumnWidth = 20;
                            //}

                            //if (n.Referred_for_HIV_TCT_Services.HasValue)
                            //{
                            worksheet.Range["EM" + row].Number = n.Referred_for_HIV_TCT_Services;
                            worksheet.Range["EM" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_eMTCT_services.HasValue)
                            //{
                            worksheet.Range["EN" + row].Number = n.Provided_eMTCT_services;
                            worksheet.Range["EN" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_to_access_PrEP.HasValue)
                            //{
                            worksheet.Range["EO" + row].Number = n.Supported_to_access_PrEP;
                            worksheet.Range["EO" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_with_condoms.HasValue)
                            //{
                            worksheet.Range["EP" + row].Number = n.Provided_with_condoms;
                            worksheet.Range["EP" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_to_access_VMMC_for_male.HasValue)
                            //{
                            worksheet.Range["EQ" + row].Number = n.Supported_to_access_VMMC_for_male;
                            worksheet.Range["EQ" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_SBCC_on_HIV_prevention.HasValue)
                            //{
                            worksheet.Range["ER" + row].Number = n.Provided_SBCC_on_HIV_prevention;
                            worksheet.Range["ER" + row].ColumnWidth = 20;
                            //}

                            //if (n.Supported_to_access_PEP.HasValue)
                            //{
                            worksheet.Range["ES" + row].Number = n.Supported_to_access_PEP;
                            worksheet.Range["ES" + row].ColumnWidth = 20;
                            //}

                            //if (n.Provided_with_Self_Awareness_Knowledge.HasValue)
                            //{
                            worksheet.Range["ET" + row].Number = n.Provided_with_Self_Awareness_Knowledge;
                            worksheet.Range["ET" + row].ColumnWidth = 20;
                            //}

                            //if (n.Referred_access_other_HIV_prevention_services.HasValue)
                            //{
                            worksheet.Range["EU" + row].Number = n.Referred_access_other_HIV_prevention_services;
                            worksheet.Range["EU" + row].ColumnWidth = 20;
                            //  }

                            int Core_Health = 0;
                            if (n.Assisted_access_safe_water == 1 || n.Provided_with_stable_shelter == 1 || n.Supported_access_pit_latrine == 1 || n.Supported_maintain_standard_Hand_washing_facility == 1 ||
                                n.Supported_access_ITNs == 1 || n.Provided_SBCC_on_WASH == 1 || n.Supported_access_immunization == 1 || n.Supported_access_antenatal_care == 1 || n.Supported_access_youth_friendly_services == 1
                                || n.Provided_SBCC_Malaria_Prevention == 1 || n.Supported_access_IPT_Referral_Pregnant_Mothers == 1 || n.supported_access_IRS_for_Malaria_Prevention == 1 || n.Supported_access_Family_Planning_services == 1
                                || n.Referred_access_other_HWSS == 1 || n.HIV_risk_assessment_pre_test_counselling == 1 || n.Supported_test_HIV == 1 || n.provided_HIV_post_test_counseling == 1 || n.Supported_Disclose_HIV_status_Family == 1
                                || n.Supported_Enroll_ART == 1 || n.Supported_access_ART_refills == 1 || n.Provided_with_ART_adherence_support == 1 || n.Supported_to_test_for_VL == 1 || n.Supported_to_receive_VL_results == 1
                                || n.Provided_IAC_for_Non_Suppression == 1 || n.Referred_for_HIV_TCT_Services == 1 || n.Provided_eMTCT_services == 1 || n.Supported_to_access_PrEP == 1 || n.Provided_with_condoms == 1 || n.Supported_to_access_VMMC_for_male == 1
                                || n.Provided_SBCC_on_HIV_prevention == 1 || n.Supported_to_access_PEP == 1 || n.Provided_with_Self_Awareness_Knowledge == 1 || n.Referred_access_other_HIV_prevention_services == 1)
                            {
                                Core_Health = 1;
                            }
                            worksheet.Range["EV" + row].Number = Core_Health;
                            worksheet.Range["EV" + row].ColumnWidth = 20;

                            int Received_Core_service = 0;
                            if (Core_Economic_Stability == 1 || Core_Education == 1 || Core_PSS == 1 || Core_Protection == 1 || Core_Food_Security_Nutrition == 1 || Core_Health == 1)
                            {
                                Received_Core_service = 1;
                            }

                            worksheet.Range["EW" + row].Number = Received_Core_service;
                            worksheet.Range["EW" + row].ColumnWidth = 20;

                            worksheet.Range["EX" + row].Number = n.Served_in_Previous_Quarter;
                            worksheet.Range["EX" + row].ColumnWidth = 20;

                            worksheet.Range["EY" + row].Number = n.Graduated_QTR1;
                            worksheet.Range["EY" + row].ColumnWidth = 20;

                            worksheet.Range["EZ" + row].Number = n.Graduated_QTR2;
                            worksheet.Range["EZ" + row].ColumnWidth = 20;

                            worksheet.Range["FA" + row].Number = n.Graduated_QTR3;
                            worksheet.Range["FA" + row].ColumnWidth = 20;

                            worksheet.Range["FB" + row].Number = n.Graduated_QTR4;
                            worksheet.Range["FB" + row].ColumnWidth = 20;


                            worksheet.Range["FC" + row].Number = n.Graduated;
                            worksheet.Range["FC" + row].ColumnWidth = 20;

                            if (n.Graduated == 1 || Received_Core_service == 1)
                            {
                                worksheet.Range["FD" + row].Number = 1;
                            }
                            else
                            {
                                worksheet.Range["FD" + row].Number = 0;
                            }

                            worksheet.Range["FE" + row].Number = n.Exited_Without_Graduation;
                            worksheet.Range["FE" + row].ColumnWidth = 20;

                            //if (n.ProgramParticipation_Inactive.HasValue)
                            //{
                            worksheet.Range["FF" + row].Number = n.ProgramParticipation_Inactive;
                            worksheet.Range["FF" + row].ColumnWidth = 20;
                            //}

                            //if (n.Transferred_out_to_PEPFAR_IP.HasValue)
                            //{
                            worksheet.Range["FG" + row].Number = n.Transferred_out_to_PEPFAR_IP;
                            worksheet.Range["FG" + row].ColumnWidth = 20;
                            //}

                            //if (n.Transferred_out_to_Non_PEPFAR_IP.HasValue)
                            //{
                            worksheet.Range["FH" + row].Number = n.Transferred_out_to_Non_PEPFAR_IP;
                            worksheet.Range["FH" + row].ColumnWidth = 20;
                            // }




                            if (n.OVC_UNK_REF.HasValue)
                            {
                                worksheet.Range["FI" + row].Number = n.OVC_UNK_REF.Value;
                                worksheet.Range["FI" + row].ColumnWidth = 20;
                            }

                            if (n.OVC_REACH.HasValue)
                            {
                                worksheet.Range["FJ" + row].Number = n.OVC_REACH.Value;
                                worksheet.Range["FJ" + row].ColumnWidth = 20;
                            }

                            if (n.OVC_AGREE_TST.HasValue)
                            {
                                worksheet.Range["FK" + row].Number = n.OVC_AGREE_TST.Value;
                                worksheet.Range["FK" + row].ColumnWidth = 20;
                            }

                            if (n.OVC_TEST.HasValue)
                            {
                                worksheet.Range["FL" + row].Number = n.OVC_TEST.Value;
                                worksheet.Range["FL" + row].ColumnWidth = 20;
                            }

                            worksheet.Range["FM" + row].Text = n.IsClientEligibleForViralloadDesc;
                            worksheet.Range["FM" + row].ColumnWidth = 20;

                            worksheet.Range["FN" + row].Text = n.ViralloadTestResults;
                            worksheet.Range["FN" + row].ColumnWidth = 20;

                            worksheet.Range["FO" + row].Text = n.ViralLoadSuppressedDescription;
                            worksheet.Range["FO" + row].ColumnWidth = 20;

                            if (n.JourneySessionsCompleted.HasValue)
                            {
                                worksheet.Range["FP" + row].Number = n.JourneySessionsCompleted.Value;
                            }
                            if (n.JourneySessionsPercentageCompletion.HasValue)
                            {
                                worksheet.Range["FQ" + row].Number = n.JourneySessionsPercentageCompletion.Value;
                            }
                            if (n.SinovuyoSessionsCompleted.HasValue)
                            {
                                worksheet.Range["FR" + row].Number = n.SinovuyoSessionsCompleted.Value;
                            }
                            if (n.SinovuyoSessionsPercentageCompletion.HasValue)
                            {
                                worksheet.Range["FS" + row].Number = n.SinovuyoSessionsPercentageCompletion.Value;
                            }
                            if (n.ECDSessionsCompleted.HasValue)
                            {
                                worksheet.Range["FT" + row].Number = n.ECDSessionsCompleted.Value;
                            }
                            if (n.ECDSessionsPercentageCompletion.HasValue)
                            {
                                worksheet.Range["FU" + row].Number = n.ECDSessionsPercentageCompletion.Value;
                            }
                            worksheet.Range["A" + row + ":FU" + row].CellStyle = Style;

                            worksheet.Range["BZ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["CJ" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["CR" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["DB" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["DN" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["EV" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["EW" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);
                            worksheet.Range["EX" + row].CellStyle.Color = Syncfusion.Drawing.Color.FromArgb(226, 239, 218);

                            row++;
                        }

                        MemoryStream ms = new MemoryStream();
                        // Save and close the document.
                        workbook.SaveAs(ms);
                        //Reset the memory stream position.
                        ms.Position = 0;
                        await JS.SaveAs("Service Layering Report.xlsx", ms.ToArray());
                        ms.Dispose();
                        workbook.Close();
                        //excelEngine.Dispose();
                        outComeResult = "Success:- The report was successfully downloaded.";
                    }
                }
                else
                {
                    outComeResult = "No Record:- There were no records found for this search";
                }
            }
        }
        catch (Exception ex)
        {
            await ToastObj.ShowAsync(new ToastModel { Title = "Error!", Content = ex.Message.ToString(), CssClass = "e-toast-danger", Icon = "e-error toast-icons" });
        }
        finally
        {
            await ReportSpinner.HideAsync();
        }
    }


    private void ClearSearchBtnClick()
    {
        InputModel = new();
        var user = db.ViewUserManagement.FirstOrDefault(o => o.UserName == userManagement.GetUserName());
        if (!user.RoleName.Contains("Super Administrator") && !user.RoleName.Contains("Administrator") && !user.RoleName.Contains("mel director") && !user.RoleName.Contains("mel manager") && !user.RoleName.Contains("cluster manager"))
        {
            var districtlist = userManagement.GetUserDistrict();
            if (districtlist != null && districtlist.Count > 0)
            {
                List<int?> m = new List<int?>();
                foreach (var n in districtlist)
                {
                    m.Add(n);
                }

                InputModel.DistrictId = m.ToArray();
                _SubcountyData = db.ASubcounty.AsNoTracking().ToList().Where(o => districtlist.Any(a => a == o.DistrictId)).ToList();
            }
            var subcountyList = userManagement.GetUserSubcounty();
            if (subcountyList != null && subcountyList.Count > 0)
            {
                List<int?> m = new List<int?>();
                foreach (var n in subcountyList)
                {
                    m.Add(n);
                }
                InputModel.SubcountyId = m.ToArray();
                _ParishData = db.AParish.AsNoTracking().ToList().Where(o => subcountyList.Any(a => a == o.SubcountyId)).ToList();
            }
        }
        else
        {
            isEnabled = true;
        }
    }


    public void OnDistrictChange(Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs<int?[]> args)
    {
        if (args.Value != null)
        {
            _SubcountyData = db.ASubcounty.Where(o => args.Value.Any(a => a == o.DistrictId) == true).AsNoTracking().ToList();
        }
    }
    public void OnSubcountyChange(Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs<int?[]> args)
    {
        if (args.Value != null)
        {
            _ParishData = db.AParish.Where(o => args.Value.Any(a => a == o.SubcountyId) == true).AsNoTracking().ToList();
        }
    }
    public void OnParishChange(Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs<int?[]> args)
    {
        if (args.Value != null)
        {
            _VillageData = db.AVillage.Where(o => args.Value.Any(a => a == o.ParishId) == true).AsNoTracking().ToList();
        }
    }
    public class FianacialYear
    {
        public int FinancialYear { get; set; }
        public string FinancialYearDesc { get; set; }
    }
}
