@page "/Index"
@using MUCOBADI.Data;
@inject UserManagement userManagement;
@inject NavigationManager Navigation;


@*<iframe src="/HHOnICARE" style="height:86vh; width:100%; border:0; border-width:0; " frameborder="0" />*@
<iframe scrolling="no"  src="/HHOnICARE" style="height:88vh; width:100%; border:0; border-width:0; " frameborder="0" />
@*<div class="row">
    <div class="col-lg-12 control-section">
        <SfToast @ref="ToastObj" ID="toast_type">
            <ToastPosition X="@ToastPosition"></ToastPosition>
        </SfToast>
    </div>
</div>


@try{
    <SfTab>
        <TabItems>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="OVC HIV STATUS INDICATORS"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <div class="tab-content" style="margin-top:10px;">
                        <MUCOBADI.Pages.Dashboards.HivStatIndicators />
                    </div>
                </ContentTemplate>
            </TabItem>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="OVC SERVICE INDICATORS"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <div class="tab-content" style="margin-top:10px;">
                        <MUCOBADI.Pages.Dashboards.OvcServiceIndicators />
                    </div>
                </ContentTemplate>
        </TabItem>
        </TabItems>
    </SfTab>
}
catch(Exception ex){
    ToastObj.ShowAsyncAsync(new ToastModel { Title = "Error!", Content = ex.ToString(), CssClass = "e-toast-danger", Icon = "e-error toast-icons" });
}

@code{
    #region Toasters
    public static string ToastContent { get; set; }
    SfToast ToastObj;
    SfToast DeleteToastObj;
    private string ToastPosition = "Right";
    private int AlarmTimeout { get; set; } = 120000;
    private List<ToastModel> Toast = new List<ToastModel>
{
        new ToastModel{ Title = "Warning!", Content=ToastContent, CssClass="e-toast-warning", Icon="e-warning toast-icons" },
        new ToastModel{ Title = "Success!", Content=ToastContent, CssClass="e-toast-success", Icon="e-success toast-icons" },
        new ToastModel{ Title = "Error!", Content=ToastContent, CssClass="e-toast-danger", Icon="e-error toast-icons" },
        new ToastModel{ Title = "Information!", Content=ToastContent, CssClass="e-toast-info", Icon="e-info toast-icons" }
    };
    #endregion Toasters
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            if (!userManagement.IsSignedIn())
            {
                Navigation.NavigateTo("/", true);
            }
        }
        catch (Exception ex)
        {
            await ToastObj.ShowAsync(new ToastModel { Title = "Error!", Content = ex.Message.ToString(), CssClass = "e-toast-danger", Icon = "e-error toast-icons" });
        }
    }
}*@